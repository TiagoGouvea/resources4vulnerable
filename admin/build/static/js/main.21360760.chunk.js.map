{"version":3,"sources":["styles/variables.js","styles/globalStyles.ts","styles/theme.ts","utils/constraints.ts","utils/networking.ts","redux/auth/actions.ts","redux/auth/reducers.ts","redux/place/actions.ts","utils/list.ts","redux/place/reducers.ts","redux/benefit/actions.ts","redux/benefit/reducers.ts","redux/institution/actions.ts","redux/institution/reducers.ts","redux/placeStore/actions.ts","redux/placeStore/reducers.ts","redux/user/actions.ts","redux/user/reducers.ts","redux/families/actions.ts","redux/families/reducers.ts","redux/rootReducer.ts","redux/store.ts","components/flex/index.tsx","components/sidebar/styles.ts","components/sidebar/index.tsx","components/adminLayout/styles.ts","components/adminLayout/index.tsx","pages/login/styles.tsx","pages/login/index.tsx","pages/dashboard/styles.tsx","pages/dashboard/index.tsx","pages/places/styles.tsx","pages/places/list.tsx","locales/yup.ts","utils/yup.ts","pages/places/form.tsx","pages/logout/index.tsx","pages/benefits/styles.tsx","pages/benefits/list.tsx","pages/benefits/form.tsx","pages/placeStore/styles.tsx","utils/string.ts","pages/placeStore/list.tsx","components/inputFormatter/index.tsx","pages/placeStore/form.tsx","pages/user/styles.tsx","pages/user/list.tsx","pages/user/form.tsx","pages/institutions/form.tsx","pages/institutions/styles.tsx","pages/institutions/list.tsx","pages/families/styles.tsx","pages/families/list.tsx","pages/index.tsx","utils/auth.ts","app.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","GlobalStyles","createGlobalStyle","props","theme","colors","background","breakpoints","styleBreakpoints","xs","sm","md","lg","xl","Theme","name","agendaRoomBackground","agendaRoomBorder","variables","spacing","none","default","localStorageConstraints","familyGroupList","code","title","cad","roleList","admin","operator","manager","financial","reduxPersist","localStorage","getItem","parsedReduxPersist","JSON","parse","undefined","parsedAuthRedux","authReducer","backend","axios","create","baseURL","process","headers","token","Authorization","setAuthorization","defaults","common","doLoginUser","createAction","doLoginUserSuccess","doLoginUserFailed","doGetToken","doGetTokenSuccess","doGetTokenFailed","requestGetToken","dispatch","getState","a","refreshToken","post","response","data","createReducer","loading","toString","state","error","action","payload","user","doGetPlace","doGetPlaceSuccess","doGetPlaceFailed","doSavePlace","doSavePlaceSuccess","doSavePlaceFailed","doDeletePlace","doDeletePlaceSuccess","doDeletePlaceFailed","requestGetPlace","id","get","addToList","item","list","filter","listItem","unshift","sort","b","moment","createdAt","diff","builder","addCase","Array","isArray","doGetBenefit","doGetBenefitSuccess","doGetBenefitFailed","doSaveBenefit","doSaveBenefitSuccess","doSaveBenefitFailed","doDeleteBenefit","doDeleteBenefitSuccess","doDeleteBenefitFailed","doGetInstitution","doGetInstitutionSuccess","doGetInstitutionFailed","doSaveInstitution","doSaveInstitutionSuccess","doSaveInstitutionFailed","doDeleteInstitution","doDeleteInstitutionSuccess","doDeleteInstitutionFailed","requestGetInstitution","doGetPlaceStore","doGetPlaceStoreSuccess","doGetPlaceStoreFailed","doSavePlaceStore","doSavePlaceStoreSuccess","doSavePlaceStoreFailed","doDeletePlaceStore","doDeletePlaceStoreSuccess","doDeletePlaceStoreFailed","requestGetPlaceStore","doGetUser","doGetUserSuccess","doGetUserFailed","doSaveUser","doSaveUserSuccess","doSaveUserFailed","doDeleteUser","doDeleteUserSuccess","doDeleteUserFailed","doUploadFamilyFile","doUploadFamilyFileSuccess","doUploadFamilyFileFailed","doUploadFamilyFileRestart","uploadReport","rootReducer","combineReducers","placeReducer","benefitReducer","institutionReducer","placeStoreReducer","userReducer","familiesReducer","persistConfig","key","storage","persistedReducer","persistReducer","Flex","styled","div","alignItems","justifyContent","vertical","full","gap","collapsed","img","show","MenuIcon","span","FixSider","MenuHeight","Sider","Layout","SubMenu","Menu","routes","path","icon","CarryOutOutlined","UserOutlined","ShopOutlined","SolutionOutlined","BankOutlined","IdcardOutlined","BarChartOutlined","disabled","Sidebar","location","useLocation","useTheme","useState","Boolean","setCollapsed","useEffect","setItem","collapsible","trigger","width","onClick","MenuUnfoldOutlined","MenuFoldOutlined","mode","defaultSelectedKeys","pathname","map","navLink","menuItem","parentPath","length","slice","maxLength","innerItem","childItems","children","group","ItemGroup","Item","to","content","type","style","marginRight","marginLeft","marginBottom","LogoutOutlined","SpinContainer","Content","Wrapper","AdminLayout","PageContainer","FormContainer","LoginPage","email","setEmail","password","setPassword","useDispatch","useSelector","size","value","placeholder","onChange","event","target","Password","textAlign","Text","message","requestLoginUser","DashboardPage","ActionWrapper","PlaceList","Title","extra","dataSource","Column","dataIndex","render","fromNow","danger","Modal","confirm","ExclamationCircleOutlined","okText","okType","cancelText","onOk","delete","printValue","require","mixed","required","oneOf","notOneOf","notType","originalValue","isCast","msg","yup","string","min","max","matches","url","trim","lowercase","uppercase","number","lessThan","moreThan","notEqual","positive","negative","integer","date","boolean","object","noUnknown","array","schema","shape","label","PlaceForm","history","useHistory","isCreating","match","params","place","find","Number","useFormik","initialValues","validationSchema","onSubmit","values","onSuccess","onFailure","setStatus","push","put","cityId","handleSubmit","handleChange","getFieldMeta","submitForm","status","errors","touched","titleMeta","visible","onCancel","confirmLoading","Object","keys","description","layout","validateStatus","help","onPressEnter","LogoutPage","BenefitList","Option","Select","institutionId","groupName","month","year","BenefitForm","benefit","institutionLoading","institutionList","setFieldValue","setFieldTouched","groupMeta","monthMeta","yearMeta","valueMeta","institutionIdMeta","defaultValue","onSelect","notFoundContent","onBlur","institution","gutter","MonthPicker","format","locale","YearPicker","prefix","formatCPF","v","replace","substr","formatCNPJ","PlaceStoreList","placeLoading","placeList","InputFormatter","setValue","formatter","parser","handleChangeValue","useCallback","placeId","cnpj","address","PlaceStoreForm","placeStore","cnpjMeta","addressMeta","placeIdMeta","UserList","placeStoreLoading","placeStoreList","active","placeStoreId","cpf","role","UserForm","getFieldProps","nameMeta","passwordMeta","cpfMeta","emailMeta","placeStoreMeta","roleMeta","activeMeta","activeField","checked","InstitutionForm","InstitutionList","Dragger","Upload","FamiliesList","bordered","column","created","updated","deleted","wrong","report","renderItem","htmlType","spinning","accept","showUploadList","customRequest","file","onError","extname","FormData","append","timeout","requestUploadFamilyFile","className","InboxOutlined","PrivateRouter","jwt","decode","exp","Date","now","useRefreshToken","component","exact","PublicRouter","Router","App","updateLocale","momentBR","store","createStore","applyMiddleware","thunk","persistor","persistStore","getStore","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21360760.chunk.js","sourcesContent":["// Ref: https://ant.design/docs/react/customize-theme#Ant-Design-Less-variables\nmodule.exports = {\n  '@primary-color': '#1890ff', // primary color for all components\n  '@link-color': '#1890ff', // link color\n  '@success-color': '#52c41a', // success state color\n  '@warning-color': '#faad14', // warning state color\n  '@error-color': '#f5222d', // error state color\n  '@font-size-base': '14px', // major text font size\n  '@heading-color': 'rgba(0, 0, 0, 0.85)', // heading text color\n  '@text-color': 'rgba(0, 0, 0, 0.65)', // major text color\n  '@text-color-secondary': 'rgba(0, 0, 0, 0.45)', // secondary text color\n  '@disabled-color': 'rgba(0, 0, 0, 0.25)', // disable state color\n  '@border-radius-base': '4px', // major border radius\n  '@border-color-base': '#d9d9d9', // major border color\n  '@box-shadow-base': '0 2px 8px rgba(0, 0, 0, 0.15)', // major shadow for layers\n  '@table-background': '#ffffff',\n  '@table-hover-background': '#f7fff1'\n};\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  html, #root {\n    width: 100%;\n    height: 100%;\n    background-color: ${(props) => props.theme.colors.background};\n    scroll-behavior: smooth;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  #root {\n    > * {      \n      &:first-child, [role~=\"group\"], [tabindex=\"-1\"] {\n        height: 100%;\n      }\n    }\n  }\n\n  body {\n    width: 100%;\n    height: 100%;    \n    overflow-x: hidden;\n  }\n`;\n","import variables from './variables';\n\nexport const breakpoints = {\n  mobile: 576,\n  tablet: 768,\n  medium: 992,\n  laptop: 1025,\n  desktop: 1440\n};\n\nexport const styleBreakpoints = {\n  xs: `${breakpoints.mobile}px`,\n  sm: `${breakpoints.tablet}px`,\n  md: `${breakpoints.medium}px`,\n  lg: `${breakpoints.laptop}px`,\n  xl: `${breakpoints.desktop}px`\n};\n\nconst colors = {\n  background: '#f6f7f8',\n  agendaRoomBackground: '#999',\n  agendaRoomBorder: '#000',\n  ...variables\n};\n\nexport type SpacingList = {\n  /**\n   * 0px\n   */\n  none: string;\n  /**\n   * 4px\n   */\n  xs: string;\n  /**\n   * 8px\n   */\n  sm: string;\n  /**\n   * 16px\n   */\n  default: string;\n  /**\n   * 32px\n   */\n  md: string;\n  /**\n   * 48px\n   */\n  lg: string;\n  /**\n   * 72px\n   */\n  xl: string;\n};\n\nexport const spacing: SpacingList = {\n  none: '0px',\n  xs: '4px',\n  sm: '8px',\n  default: '16px',\n  md: '32px',\n  lg: '48px',\n  xl: '72px'\n};\n\nexport type SpacingName = keyof SpacingList;\n\nexport const Theme = {\n  name: 'Default',\n  colors,\n  breakpoints: styleBreakpoints,\n  spacing\n};\n\nexport type AppTheme = typeof Theme;\n","export const PERSIST_KEY = 'root';\n\nexport const localStorageConstraints = {\n  SIDEBAR_COLLAPSED: 'sidebar:collapsed'\n};\nexport const familyGroupList = {\n  'extreme-poverty': { code: 1, title: 'Extrema pobreza' },\n  'poverty-line': { code: 2, title: 'Linha da pobreza' },\n  cad: { code: 3, title: 'Perfil CAD único' }\n};\n\nexport const roleList = {\n  admin: { title: 'Administrador' },\n  operator: { title: 'Operador' },\n  manager: { title: 'Gerente' },\n  financial: { title: 'Financeiro' }\n};\n","import axios from 'axios';\nimport { TokenResponse } from '../interfaces/auth';\nimport { PERSIST_KEY } from './constraints';\nimport { AppState } from '../redux/rootReducer';\n\nconst reduxPersist = localStorage.getItem(`persist:${PERSIST_KEY}`);\nconst parsedReduxPersist = reduxPersist ? JSON.parse(reduxPersist) : undefined;\nconst parsedAuthRedux: AppState['authReducer'] | undefined = parsedReduxPersist\n  ? JSON.parse(parsedReduxPersist.authReducer)\n  : undefined;\n\n/**\n * Default axios instance\n */\nconst backend = axios.create({\n  baseURL: process.env.REACT_APP_ENV_BACKEND_HOST,\n  headers: parsedAuthRedux && parsedAuthRedux.token ? { Authorization: `Bearer ${parsedAuthRedux.token}` } : undefined\n});\n\n/**\n * Set or clear the default Authorization token on request headers\n * @param token JWT token or null\n */\nconst setAuthorization = (token: TokenResponse['token'] | null) => {\n  backend.defaults.headers.common['Authorization'] = token ? `Bearer ${token}` : null;\n};\n\nexport { backend, setAuthorization };\n","import { createAction } from '@reduxjs/toolkit';\nimport { TokenResponse } from '../../interfaces/auth';\nimport { ThunkResult } from '../store';\nimport { backend, setAuthorization } from '../../utils/networking';\n\n// Simple actions and types\nexport const doLoginUser = createAction<void>('auth/LOGIN_USER');\nexport const doLoginUserSuccess = createAction<TokenResponse>('auth/LOGIN_USER_SUCCESS');\nexport const doLoginUserFailed = createAction<Error | undefined>('auth/LOGIN_USER_FAILED');\nexport const doGetToken = createAction<void>('auth/GET_TOKEN');\nexport const doGetTokenSuccess = createAction<TokenResponse>('auth/GET_TOKEN_SUCCESS');\nexport const doGetTokenFailed = createAction<Error | undefined>('auth/GET_TOKEN_FAILED');\n\n/**\n * Login user thunk action\n */\nexport const requestLoginUser = (email: string, password: string): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doLoginUser());\n      const response = await backend.post<TokenResponse>('/auth/login', { email, password });\n      if (response && response.data) {\n        // Request finished\n        setAuthorization(response.data.token); // Set base authorization\n        dispatch(doLoginUserSuccess(response.data)); // Dispatch result\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doLoginUserFailed());\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doLoginUserFailed(error));\n    }\n  };\n};\n\n/**\n * Token renewal process - call on token expiration and on the return to the app\n */\nexport const requestGetToken = (): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetToken());\n      // Getting refresh token from the state\n      const refreshToken = getState().authReducer.refreshToken;\n      if (!refreshToken) {\n        // User never logged\n        dispatch(doGetTokenFailed());\n        return;\n      }\n      const response = await backend.post<TokenResponse>('/auth/token', { refreshToken });\n      if (response && response.data) {\n        // Request finished\n        setAuthorization(response.data.token); // Set base authorization\n        dispatch(doGetTokenSuccess(response.data)); // Dispatch result\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doGetTokenFailed());\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doGetTokenFailed(error));\n    }\n  };\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  doLoginUser,\n  doLoginUserSuccess,\n  doLoginUserFailed,\n  doGetToken,\n  doGetTokenSuccess,\n  doGetTokenFailed\n} from './actions';\nimport { User } from '../../interfaces/user';\n\nexport interface AuthReducerState {\n  token?: string;\n  refreshToken?: string;\n  user?: User;\n  loading: boolean;\n  error?: Error;\n}\n\nconst initialState = {\n  loading: false\n};\n\nexport default createReducer<AuthReducerState>(initialState, {\n  [doLoginUser.toString()]: (state: AuthReducerState) => {\n    state.loading = true;\n    state.error = undefined;\n  },\n  [doLoginUserSuccess.toString()]: (state: AuthReducerState, action) => {\n    state.loading = false;\n    state.token = action.payload.token;\n    state.refreshToken = action.payload.refreshToken;\n    state.user = action.payload.user;\n  },\n  [doLoginUserFailed.toString()]: (state: AuthReducerState, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  },\n  [doGetToken.toString()]: (state: AuthReducerState) => {\n    state.loading = true;\n  },\n  [doGetTokenSuccess.toString()]: (state: AuthReducerState, action) => {\n    state.loading = false;\n    state.token = action.payload.token;\n    state.refreshToken = action.payload.refreshToken;\n    state.user = action.payload.user;\n  },\n  [doGetTokenFailed.toString()]: (state: AuthReducerState) => {\n    state.loading = false;\n    // Token failed, log out the user\n    state.token = undefined;\n    state.refreshToken = undefined;\n    state.user = undefined;\n  }\n});\n","import { createAction } from '@reduxjs/toolkit';\nimport { Place } from '../../interfaces/place';\nimport { User } from '../../interfaces/user';\nimport { backend } from '../../utils/networking';\nimport { ThunkResult } from '../store';\n\n// Simple actions and types\nexport const doGetPlace = createAction<void>('place/GET');\nexport const doGetPlaceSuccess = createAction<Place | Place[]>('place/GET_SUCCESS');\nexport const doGetPlaceFailed = createAction<Error | undefined>('place/GET_FAILED');\n\nexport const doSavePlace = createAction<void>('place/SAVE');\nexport const doSavePlaceSuccess = createAction<Place>('place/SAVE_SUCCESS');\nexport const doSavePlaceFailed = createAction<Error | undefined>('place/SAVE_FAILED');\n\nexport const doDeletePlace = createAction<void>('place/DELETE');\nexport const doDeletePlaceSuccess = createAction<{ id: number }>('place/DELETE_SUCCESS');\nexport const doDeletePlaceFailed = createAction<Error | undefined>('place/DELETE_FAILED');\n\n/**\n * Get place Thunk action\n */\nexport const requestGetPlace = (id?: number): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetPlace());\n      // Request\n      const response = await backend.get<Place | Place[]>(`/places/${id || ''}`);\n      if (response && response.data) {\n        // Request finished\n        dispatch(doGetPlaceSuccess(response.data)); // Dispatch result\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doGetPlaceFailed());\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doGetPlaceFailed(error));\n    }\n  };\n};\n\n/**\n * Save place Thunk action\n */\nexport const requestSavePlace = (\n  item: Pick<Place, 'title' | 'id'>,\n  onSuccess?: () => void,\n  onFailure?: (error?: Error) => void\n): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doDeletePlace());\n      // Get logged user cityId\n      const user = getState().authReducer.user as User;\n\n      // Request\n      let response;\n      if (item.id) {\n        response = await backend.put<Place>(`/places/${item.id}`, { ...item, cityId: user.cityId });\n      } else {\n        response = await backend.post<Place>(`/places`, { ...item, cityId: user.cityId });\n      }\n      if (response && response.data) {\n        // Request finished\n        dispatch(doSavePlaceSuccess(response.data)); // Dispatch result\n        if (onSuccess) onSuccess();\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doSavePlaceFailed());\n        if (onFailure) onFailure();\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doSavePlaceFailed(error));\n      if (onFailure) onFailure(error);\n    }\n  };\n};\n\n/**\n * Delete place Thunk action\n */\nexport const requestDeletePlace = (id: number): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetPlace());\n      // Request\n      await backend.delete<void>(`/places/${id || ''}`);\n      // Finished\n      dispatch(doDeletePlaceSuccess({ id })); // Dispatch result\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doDeletePlaceFailed(error));\n    }\n  };\n};\n","import moment from 'moment';\n\n/**\n * Add and sorts items in a list\n * @param item the item to add\n * @param list the list to add to\n */\nexport const addToList = <ItemType extends { id?: number | string; createdAt?: number | Date | null }>(\n  item: ItemType | null,\n  list: ItemType[]\n) => {\n  if (item) {\n    list = list.filter((listItem) => listItem.id !== item.id);\n    list.unshift(item);\n  }\n  list = list.sort((a, b) => moment(b.createdAt as Date).diff(moment(a.createdAt as Date)));\n  return list;\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  doGetPlace,\n  doGetPlaceSuccess,\n  doGetPlaceFailed,\n  doSavePlace,\n  doSavePlaceSuccess,\n  doSavePlaceFailed,\n  doDeletePlace,\n  doDeletePlaceSuccess,\n  doDeletePlaceFailed\n} from './actions';\nimport { Place } from '../../interfaces/place';\nimport { addToList } from '../../utils/list';\n\nexport interface PlaceReducerState {\n  list: Place[];\n  loading: boolean;\n  error?: Error;\n}\n\nconst initialState = {\n  list: [],\n  loading: false\n};\n\nexport default createReducer<PlaceReducerState>(initialState, (builder) =>\n  builder\n    // Get actions\n    .addCase(doGetPlace, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doGetPlaceSuccess, (state, action) => {\n      state.loading = false;\n      if (Array.isArray(action.payload)) {\n        // User got the list\n        state.list = addToList(null, action.payload);\n      } else {\n        // User got a single item\n        state.list = addToList(action.payload, state.list);\n      }\n    })\n    .addCase(doGetPlaceFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Save actions\n    .addCase(doSavePlace, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doSavePlaceSuccess, (state, action) => {\n      state.loading = false;\n      state.list = addToList(action.payload, state.list);\n    })\n    .addCase(doSavePlaceFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Delete actions\n    .addCase(doDeletePlace, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doDeletePlaceSuccess, (state, action) => {\n      state.loading = false;\n      state.list = state.list.filter((item) => item.id !== action.payload.id);\n    })\n    .addCase(doDeletePlaceFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n);\n","import { createAction } from '@reduxjs/toolkit';\nimport { ThunkResult } from '../store';\nimport { backend } from '../../utils/networking';\nimport { Benefit } from '../../interfaces/benefit';\n\n// Simple actions and types\nexport const doGetBenefit = createAction<void>('benefit/GET');\nexport const doGetBenefitSuccess = createAction<Benefit | Benefit[]>('benefit/GET_SUCCESS');\nexport const doGetBenefitFailed = createAction<Error | undefined>('benefit/GET_FAILED');\n\nexport const doSaveBenefit = createAction<void>('benefit/SAVE');\nexport const doSaveBenefitSuccess = createAction<Benefit>('benefit/SAVE_SUCCESS');\nexport const doSaveBenefitFailed = createAction<Error | undefined>('benefit/SAVE_FAILED');\n\nexport const doDeleteBenefit = createAction<void>('benefit/DELETE');\nexport const doDeleteBenefitSuccess = createAction<{ id: number }>('benefit/DELETE_SUCCESS');\nexport const doDeleteBenefitFailed = createAction<Error | undefined>('benefit/DELETE_FAILED');\n\n/**\n * Get Benefit Thunk action\n */\nexport const requestGetBenefit = (id?: number): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetBenefit());\n      // Request\n      const response = await backend.get<Benefit | Benefit[]>(`/benefits/${id || ''}`);\n      if (response && response.data) {\n        // Request finished\n        dispatch(doGetBenefitSuccess(response.data)); // Dispatch result\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doGetBenefitFailed());\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doGetBenefitFailed(error));\n    }\n  };\n};\n\n/**\n * Save Benefit Thunk action\n */\nexport const requestSaveBenefit = (\n  item: Pick<Benefit, 'title' | 'id'>,\n  onSuccess?: () => void,\n  onFailure?: (error?: Error) => void\n): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doDeleteBenefit());\n\n      // Request\n      let response;\n      if (item.id) {\n        response = await backend.put<Benefit>(`/Benefits/${item.id}`, { ...item });\n      } else {\n        response = await backend.post<Benefit>(`/Benefits`, { ...item });\n      }\n      if (response && response.data) {\n        // Request finished\n        dispatch(doSaveBenefitSuccess(response.data)); // Dispatch result\n        if (onSuccess) onSuccess();\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doSaveBenefitFailed());\n        if (onFailure) onFailure();\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doSaveBenefitFailed(error));\n      if (onFailure) onFailure(error);\n    }\n  };\n};\n\n/**\n * Delete Benefit Thunk action\n */\nexport const requestDeleteBenefit = (id: number): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetBenefit());\n      // Request\n      await backend.delete<void>(`/Benefits/${id || ''}`);\n      // Finished\n      dispatch(doDeleteBenefitSuccess({ id })); // Dispatch result\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doDeleteBenefitFailed(error));\n    }\n  };\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  doGetBenefit,\n  doGetBenefitSuccess,\n  doGetBenefitFailed,\n  doSaveBenefit,\n  doSaveBenefitSuccess,\n  doSaveBenefitFailed,\n  doDeleteBenefit,\n  doDeleteBenefitSuccess,\n  doDeleteBenefitFailed\n} from './actions';\nimport { Benefit } from '../../interfaces/benefit';\nimport { addToList } from '../../utils/list';\n\nexport interface BenefitReducerState {\n  list: Benefit[];\n  loading: boolean;\n  error?: Error;\n}\n\nconst initialState = {\n  list: [],\n  loading: false\n};\n\nexport default createReducer<BenefitReducerState>(initialState, (builder) =>\n  builder\n    // Get actions\n    .addCase(doGetBenefit, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doGetBenefitSuccess, (state, action) => {\n      state.loading = false;\n      if (Array.isArray(action.payload)) {\n        // User got the list\n        state.list = addToList(null, action.payload);\n      } else {\n        // User got a single item\n        state.list = addToList(action.payload, state.list);\n      }\n    })\n    .addCase(doGetBenefitFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Save actions\n    .addCase(doSaveBenefit, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doSaveBenefitSuccess, (state, action) => {\n      state.loading = false;\n      state.list = addToList(action.payload, state.list);\n    })\n    .addCase(doSaveBenefitFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Delete actions\n    .addCase(doDeleteBenefit, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doDeleteBenefitSuccess, (state, action) => {\n      state.loading = false;\n      state.list = state.list.filter((item) => item.id !== action.payload.id);\n    })\n    .addCase(doDeleteBenefitFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n);\n","import { createAction } from '@reduxjs/toolkit';\nimport { ThunkResult } from '../store';\nimport { backend } from '../../utils/networking';\nimport { Institution } from '../../interfaces/institution';\n\n// Simple actions and types\nexport const doGetInstitution = createAction<void>('Institution/GET');\nexport const doGetInstitutionSuccess = createAction<Institution | Institution[]>('Institution/GET_SUCCESS');\nexport const doGetInstitutionFailed = createAction<Error | undefined>('Institution/GET_FAILED');\n\nexport const doSaveInstitution = createAction<void>('Institution/SAVE');\nexport const doSaveInstitutionSuccess = createAction<Institution>('Institution/SAVE_SUCCESS');\nexport const doSaveInstitutionFailed = createAction<Error | undefined>('Institution/SAVE_FAILED');\n\nexport const doDeleteInstitution = createAction<void>('Institution/DELETE');\nexport const doDeleteInstitutionSuccess = createAction<{ id: number }>('Institution/DELETE_SUCCESS');\nexport const doDeleteInstitutionFailed = createAction<Error | undefined>('Institution/DELETE_FAILED');\n\n/**\n * Get Institution Thunk action\n */\nexport const requestGetInstitution = (id?: number): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetInstitution());\n      // Request\n      const response = await backend.get<Institution | Institution[]>(`/institutions/${id || ''}`);\n      if (response && response.data) {\n        // Request finished\n        dispatch(doGetInstitutionSuccess(response.data)); // Dispatch result\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doGetInstitutionFailed());\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doGetInstitutionFailed(error));\n    }\n  };\n};\n\n/**\n * Save Institution Thunk action\n */\nexport const requestSaveInstitution = (\n  item: Pick<Institution, 'title' | 'id'>,\n  onSuccess?: () => void,\n  onFailure?: (error?: Error) => void\n): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doDeleteInstitution());\n\n      // Request\n      let response;\n      if (item.id) {\n        response = await backend.put<Institution>(`/institutions/${item.id}`, { ...item });\n      } else {\n        response = await backend.post<Institution>(`/institutions`, { ...item });\n      }\n      if (response && response.data) {\n        // Request finished\n        dispatch(doSaveInstitutionSuccess(response.data)); // Dispatch result\n        if (onSuccess) onSuccess();\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doSaveInstitutionFailed());\n        if (onFailure) onFailure();\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doSaveInstitutionFailed(error));\n      if (onFailure) onFailure(error);\n    }\n  };\n};\n\n/**\n * Delete Institution Thunk action\n */\nexport const requestDeleteInstitution = (id: number): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetInstitution());\n      // Request\n      await backend.delete<void>(`/institutions/${id || ''}`);\n      // Finished\n      dispatch(doDeleteInstitutionSuccess({ id })); // Dispatch result\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doDeleteInstitutionFailed(error));\n    }\n  };\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  doGetInstitution,\n  doGetInstitutionSuccess,\n  doGetInstitutionFailed,\n  doSaveInstitution,\n  doSaveInstitutionSuccess,\n  doSaveInstitutionFailed,\n  doDeleteInstitution,\n  doDeleteInstitutionSuccess,\n  doDeleteInstitutionFailed\n} from './actions';\nimport { Institution } from '../../interfaces/institution';\nimport { addToList } from '../../utils/list';\n\nexport interface InstitutionReducerState {\n  list: Institution[];\n  loading: boolean;\n  error?: Error;\n}\n\nconst initialState = {\n  list: [],\n  loading: false\n};\n\nexport default createReducer<InstitutionReducerState>(initialState, (builder) =>\n  builder\n    // Get actions\n    .addCase(doGetInstitution, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doGetInstitutionSuccess, (state, action) => {\n      state.loading = false;\n      if (Array.isArray(action.payload)) {\n        // User got the list\n        state.list = addToList(null, action.payload);\n      } else {\n        // User got a single item\n        state.list = addToList(action.payload, state.list);\n      }\n    })\n    .addCase(doGetInstitutionFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Save actions\n    .addCase(doSaveInstitution, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doSaveInstitutionSuccess, (state, action) => {\n      state.loading = false;\n      state.list = addToList(action.payload, state.list);\n    })\n    .addCase(doSaveInstitutionFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Delete actions\n    .addCase(doDeleteInstitution, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doDeleteInstitutionSuccess, (state, action) => {\n      state.loading = false;\n      state.list = state.list.filter((item) => item.id !== action.payload.id);\n    })\n    .addCase(doDeleteInstitutionFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n);\n","import { createAction } from '@reduxjs/toolkit';\nimport { ThunkResult } from '../store';\nimport { backend } from '../../utils/networking';\nimport { PlaceStore } from '../../interfaces/placeStore';\n\n// Simple actions and types\nexport const doGetPlaceStore = createAction<void>('placeStore/GET');\nexport const doGetPlaceStoreSuccess = createAction<PlaceStore | PlaceStore[]>('placeStore/GET_SUCCESS');\nexport const doGetPlaceStoreFailed = createAction<Error | undefined>('placeStore/GET_FAILED');\n\nexport const doSavePlaceStore = createAction<void>('placeStore/SAVE');\nexport const doSavePlaceStoreSuccess = createAction<PlaceStore>('placeStore/SAVE_SUCCESS');\nexport const doSavePlaceStoreFailed = createAction<Error | undefined>('placeStore/SAVE_FAILED');\n\nexport const doDeletePlaceStore = createAction<void>('placeStore/DELETE');\nexport const doDeletePlaceStoreSuccess = createAction<{ id: number }>('placeStore/DELETE_SUCCESS');\nexport const doDeletePlaceStoreFailed = createAction<Error | undefined>('placeStore/DELETE_FAILED');\n\n/**\n * Get PlaceStore Thunk action\n */\nexport const requestGetPlaceStore = (id?: number): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetPlaceStore());\n      // Request\n      const response = await backend.get<PlaceStore | PlaceStore[]>(`/place-stores/${id || ''}`);\n      if (response && response.data) {\n        // Request finished\n        dispatch(doGetPlaceStoreSuccess(response.data)); // Dispatch result\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doGetPlaceStoreFailed());\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doGetPlaceStoreFailed(error));\n    }\n  };\n};\n\n/**\n * Save PlaceStore Thunk action\n */\nexport const requestSavePlaceStore = (\n  item: Pick<PlaceStore, 'title' | 'id'>,\n  onSuccess?: () => void,\n  onFailure?: (error?: Error) => void\n): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doDeletePlaceStore());\n\n      // Request\n      let response;\n      if (item.id) {\n        response = await backend.put<PlaceStore>(`/place-stores/${item.id}`, { ...item });\n      } else {\n        response = await backend.post<PlaceStore>(`/place-stores`, { ...item });\n      }\n      if (response && response.data) {\n        // Request finished\n        dispatch(doSavePlaceStoreSuccess(response.data)); // Dispatch result\n        if (onSuccess) onSuccess();\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doSavePlaceStoreFailed());\n        if (onFailure) onFailure();\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doSavePlaceStoreFailed(error));\n      if (onFailure) onFailure(error);\n    }\n  };\n};\n\n/**\n * Delete PlaceStore Thunk action\n */\nexport const requestDeletePlaceStore = (id: number): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetPlaceStore());\n      // Request\n      await backend.delete<void>(`/place-stores/${id || ''}`);\n      // Finished\n      dispatch(doDeletePlaceStoreSuccess({ id })); // Dispatch result\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doDeletePlaceStoreFailed(error));\n    }\n  };\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  doGetPlaceStore,\n  doGetPlaceStoreSuccess,\n  doGetPlaceStoreFailed,\n  doSavePlaceStore,\n  doSavePlaceStoreSuccess,\n  doSavePlaceStoreFailed,\n  doDeletePlaceStore,\n  doDeletePlaceStoreSuccess,\n  doDeletePlaceStoreFailed\n} from './actions';\nimport { PlaceStore } from '../../interfaces/placeStore';\nimport { addToList } from '../../utils/list';\n\nexport interface PlaceStoreReducerState {\n  list: PlaceStore[];\n  loading: boolean;\n  error?: Error;\n}\n\nconst initialState = {\n  list: [],\n  loading: false\n};\n\nexport default createReducer<PlaceStoreReducerState>(initialState, (builder) =>\n  builder\n    // Get actions\n    .addCase(doGetPlaceStore, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doGetPlaceStoreSuccess, (state, action) => {\n      state.loading = false;\n      if (Array.isArray(action.payload)) {\n        // User got the list\n        state.list = addToList(null, action.payload);\n      } else {\n        // User got a single item\n        state.list = addToList(action.payload, state.list);\n      }\n    })\n    .addCase(doGetPlaceStoreFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Save actions\n    .addCase(doSavePlaceStore, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doSavePlaceStoreSuccess, (state, action) => {\n      state.loading = false;\n      state.list = addToList(action.payload, state.list);\n    })\n    .addCase(doSavePlaceStoreFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Delete actions\n    .addCase(doDeletePlaceStore, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doDeletePlaceStoreSuccess, (state, action) => {\n      state.loading = false;\n      state.list = state.list.filter((item) => item.id !== action.payload.id);\n    })\n    .addCase(doDeletePlaceStoreFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n);\n","import { createAction } from '@reduxjs/toolkit';\nimport { ThunkResult } from '../store';\nimport { backend } from '../../utils/networking';\nimport { User } from '../../interfaces/user';\n\n// Simple actions and types\nexport const doGetUser = createAction<void>('user/GET');\nexport const doGetUserSuccess = createAction<User | User[]>('user/GET_SUCCESS');\nexport const doGetUserFailed = createAction<Error | undefined>('user/GET_FAILED');\n\nexport const doSaveUser = createAction<void>('user/SAVE');\nexport const doSaveUserSuccess = createAction<User>('user/SAVE_SUCCESS');\nexport const doSaveUserFailed = createAction<Error | undefined>('user/SAVE_FAILED');\n\nexport const doDeleteUser = createAction<void>('user/DELETE');\nexport const doDeleteUserSuccess = createAction<{ id: number }>('user/DELETE_SUCCESS');\nexport const doDeleteUserFailed = createAction<Error | undefined>('user/DELETE_FAILED');\n\n/**\n * Get User Thunk action\n */\nexport const requestGetUser = (id?: number): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetUser());\n      // Request\n      const response = await backend.get<User | User[]>(`/users/${id || ''}`);\n      if (response && response.data) {\n        // Request finished\n        dispatch(doGetUserSuccess(response.data)); // Dispatch result\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doGetUserFailed());\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doGetUserFailed(error));\n    }\n  };\n};\n\n/**\n * Save User Thunk action\n */\nexport const requestSaveUser = (\n  item: Pick<User, 'name' | 'id'>,\n  onSuccess?: () => void,\n  onFailure?: (error?: Error) => void\n): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doDeleteUser());\n\n      // Request\n      let response;\n      if (item.id) {\n        response = await backend.put<User>(`/users/${item.id}`, { ...item });\n      } else {\n        response = await backend.post<User>(`/users`, { ...item });\n      }\n      if (response && response.data) {\n        // Request finished\n        dispatch(doSaveUserSuccess(response.data)); // Dispatch result\n        if (onSuccess) onSuccess();\n      } else {\n        // Request without response - probably won't happen, but cancel the request\n        dispatch(doSaveUserFailed());\n        if (onFailure) onFailure();\n      }\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doSaveUserFailed(error));\n      if (onFailure) onFailure(error);\n    }\n  };\n};\n\n/**\n * Delete User Thunk action\n */\nexport const requestDeleteUser = (id: number): ThunkResult<void> => {\n  return async (dispatch) => {\n    try {\n      // Start request - starting loading state\n      dispatch(doGetUser());\n      // Request\n      await backend.delete<void>(`/users/${id || ''}`);\n      // Finished\n      dispatch(doDeleteUserSuccess({ id })); // Dispatch result\n    } catch (error) {\n      // Request failed: dispatch error\n      dispatch(doDeleteUserFailed(error));\n    }\n  };\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  doGetUser,\n  doGetUserSuccess,\n  doGetUserFailed,\n  doSaveUser,\n  doSaveUserSuccess,\n  doSaveUserFailed,\n  doDeleteUser,\n  doDeleteUserSuccess,\n  doDeleteUserFailed\n} from './actions';\nimport { User } from '../../interfaces/user';\nimport { addToList } from '../../utils/list';\n\nexport interface UserReducerState {\n  list: User[];\n  loading: boolean;\n  error?: Error;\n}\n\nconst initialState = {\n  list: [],\n  loading: false\n};\n\nexport default createReducer<UserReducerState>(initialState, (builder) =>\n  builder\n    // Get actions\n    .addCase(doGetUser, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doGetUserSuccess, (state, action) => {\n      state.loading = false;\n      if (Array.isArray(action.payload)) {\n        // User got the list\n        state.list = addToList(null, action.payload);\n      } else {\n        // User got a single item\n        state.list = addToList(action.payload, state.list);\n      }\n    })\n    .addCase(doGetUserFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Save actions\n    .addCase(doSaveUser, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doSaveUserSuccess, (state, action) => {\n      state.loading = false;\n      state.list = addToList(action.payload, state.list);\n    })\n    .addCase(doSaveUserFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Delete actions\n    .addCase(doDeleteUser, (state) => {\n      state.loading = true;\n      state.error = undefined;\n    })\n    .addCase(doDeleteUserSuccess, (state, action) => {\n      state.loading = false;\n      state.list = state.list.filter((item) => item.id !== action.payload.id);\n    })\n    .addCase(doDeleteUserFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n);\n","import { createAction } from '@reduxjs/toolkit';\nimport { backend } from '../../utils/networking';\nimport { ThunkResult } from '../store';\nimport path from 'path';\nimport { CSVReport } from '../../interfaces/csvReport';\n\nexport const doUploadFamilyFile = createAction<void>('families/UPLOAD');\nexport const doUploadFamilyFileSuccess = createAction<CSVReport>('families/UPLOAD_SUCCESS');\nexport const doUploadFamilyFileFailed = createAction<string | undefined>('families/UPLOAD_FAILED');\nexport const doUploadFamilyFileRestart = createAction<void>('families/UPLOAD_RESTART');\n\n/**\n * Save User Thunk action\n */\nexport const requestUploadFamilyFile = (\n  file: File,\n  onSuccess?: () => void,\n  onFailure?: (error?: string) => void\n): ThunkResult<void> => {\n  return async (dispatch) => {\n    /**\n     * Calls the failure functions\n     * @param error The error string\n     */\n    const onError = (error?: string) => {\n      dispatch(doUploadFamilyFileFailed(error));\n      if (onFailure) onFailure(error);\n    };\n\n    try {\n      if (file) {\n        // If the extension is correct\n        if (path.extname(file.name) === '.csv') {\n          // If file is smaller than 2MB\n          // if (file.size < 2097152) {\n          // Start request - starting loading state\n          dispatch(doUploadFamilyFile());\n\n          const data = new FormData();\n          data.append('file', file);\n\n          // Request\n          const response = await backend.post<CSVReport>(`/families/file`, data, { timeout: 1000 * 60 * 60 * 6 });\n          if (response && response.data && response.status === 200) {\n            // Request finished\n            dispatch(doUploadFamilyFileSuccess(response.data)); // Dispatch result\n            if (onSuccess) onSuccess();\n          } else {\n            // Request without response - probably won't happen, but cancel the request\n            onError(`Ocorreu um erro no servidor. Tente novamente.`);\n          }\n          // } else {\n          //   dispatch(doUploadFamilyFileFailed());\n          //   if (onFailure) onFailure();\n          // }\n        } else {\n          onError(`O tipo de arquivo precisa ser .csv.`);\n        }\n      } else {\n        onError(`Nenhum arquivo encontrado.`);\n      }\n    } catch (error) {\n      onError(error.message);\n    }\n  };\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { CSVReport } from '../../interfaces/csvReport';\nimport {\n  doUploadFamilyFile,\n  doUploadFamilyFileFailed,\n  doUploadFamilyFileRestart,\n  doUploadFamilyFileSuccess\n} from './actions';\n\nexport interface FamilyReducerState {\n  loading: boolean;\n  error?: string;\n  uploadReport?: CSVReport;\n}\n\nconst initialState = {\n  loading: false\n};\n\nexport default createReducer<FamilyReducerState>(initialState, (builder) =>\n  builder\n    // Get actions\n    .addCase(doUploadFamilyFile, (state) => {\n      state.loading = true;\n      state.error = undefined;\n      state.uploadReport = undefined;\n    })\n    .addCase(doUploadFamilyFileSuccess, (state, action) => {\n      state.loading = false;\n      state.error = undefined;\n      state.uploadReport = action.payload;\n    })\n    .addCase(doUploadFamilyFileFailed, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.uploadReport = undefined;\n    })\n    .addCase(doUploadFamilyFileRestart, (state) => {\n      state.loading = false;\n      state.error = undefined;\n      state.uploadReport = undefined;\n    })\n);\n","import { combineReducers } from 'redux';\n\n// Reducers\nimport authReducer from './auth/reducers';\nimport placeReducer from './place/reducers';\nimport benefitReducer from './benefit/reducers';\nimport institutionReducer from './institution/reducers';\nimport placeStoreReducer from './placeStore/reducers';\nimport userReducer from './user/reducers';\nimport familiesReducer from './families/reducers';\n\nconst rootReducer = combineReducers({\n  authReducer,\n  placeReducer,\n  benefitReducer,\n  institutionReducer,\n  placeStoreReducer,\n  userReducer,\n  familiesReducer\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk, { ThunkAction, ThunkMiddleware } from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport rootReducer, { AppState } from './rootReducer';\nimport { PERSIST_KEY } from '../utils/constraints';\n\nexport type Action = { type: string; [key: string]: any };\nexport type ThunkResult<R> = ThunkAction<R, AppState, undefined, Action>;\n\n// Redux-persist config\nconst persistConfig = {\n  key: PERSIST_KEY,\n  storage\n};\n\n// Persist all the reducers\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n/**\n * Generate store and persistor\n */\nexport default () => {\n  const store = createStore(persistedReducer, applyMiddleware(thunk as ThunkMiddleware<AppState, Action>));\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n","import styled from 'styled-components';\nimport * as CSSTypes from 'csstype';\nimport { SpacingName } from '../../styles/theme';\n\ntype FlexProps = {\n  /**\n   * Set the flex's align-items css property\n   *\n   * @default initial\n   **/\n  alignItems?: CSSTypes.AlignItemsProperty;\n  /**\n   * Set the flex's justify-content css property\n   *\n   * @default initial\n   **/\n  justifyContent?: CSSTypes.JustifyContentProperty;\n  /**\n   * Whether or not the elements should be vertically stacked.\n   * Set the flex's justify-content css property to \"column\" if true\n   **/\n  vertical?: boolean;\n  /**\n   * Add a space between elements\n   * If a boolean is given instead of a SpacingName. Defaults to \"sm\"\n   **/\n  gap?: SpacingName | boolean;\n  /**\n   * Set the width AND height to 100%;\n   **/\n  full?: boolean;\n};\n\n/**\n * A div with flexbox properties\n */\nexport const Flex = styled.div<FlexProps>`\n  /* Important !!!!!\n  It is not recommended to add more properties here.\n  If that is the case, it's better that you create your own\n  flex component for your specific case instead. */\n\n  display: flex;\n  align-items: ${(props) => (props.alignItems ? props.alignItems : 'initial')};\n  justify-content: ${(props) => (props.justifyContent ? props.justifyContent : 'initial')};\n  flex-direction: ${(props) => (props.vertical ? 'column' : 'row')};\n  ${(props) => (props.full ? 'width: 100%; height: 100%;' : '')}\n\n  /* For every element inside this component, but only the first nested */\n  > * {\n    /* If not the last one */\n    &:not(:last-child) {\n      ${(props) =>\n        props.gap\n          ? `${props.vertical ? 'margin-bottom' : 'margin-right'}: ${\n              props.gap === true ? props.theme.spacing.sm : props.theme.spacing[props.gap]\n            };`\n          : ''}\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LogoWrapper = styled.div<{ collapsed?: boolean }>`\n  max-width: 100%;\n  position: relative;\n  height: ${(props) => (props.collapsed ? `80px` : `229px`)};\n  transition: height 200ms ease-out;\n`;\n\nexport const Logo = styled.img<{ show?: boolean }>`\n  position: absolute;\n  padding: ${(props) => props.theme.spacing.default};\n  max-width: 100%;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  opacity: ${(props) => (props.show ? `1` : `0`)};\n  transition: opacity 30ms;\n`;\n\nexport const MenuIcon = styled.span`\n  z-index: 2;\n  color: #fff;\n  font-size: 16px;\n  position: absolute;\n  top: ${(props) => props.theme.spacing.md};\n  right: -16px;\n  padding: ${(props) => props.theme.spacing.xs} ${(props) => props.theme.spacing.sm};\n  background-color: ${(props) => props.theme.colors['@primary-color']};\n  border-radius: 50%;\n  box-shadow: ${(props) => props.theme.colors['@box-shadow-base']};\n  cursor: pointer;\n`;\n\nexport const FixSider = styled.div`\n  > * {\n    height: 100%;\n    .ant-layout-sider-children {\n      display: flex;\n      flex-direction: column;\n      max-height: 100%;\n\n      > * {\n        &:last-child {\n          margin-top: auto;\n        }\n      }\n    }\n  }\n`;\n\nexport const MenuHeight = styled.div`\n  overflow: auto;\n`;\n","import {\n  BarChartOutlined,\n  CarryOutOutlined,\n  BankOutlined,\n  IdcardOutlined,\n  LogoutOutlined,\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  ShopOutlined,\n  SolutionOutlined,\n  UserOutlined\n} from '@ant-design/icons';\nimport { Button, Layout, Menu, Popover } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useTheme } from 'styled-components';\nimport { localStorageConstraints } from '../../utils/constraints';\nimport { Flex } from '../flex';\nimport { FixSider, MenuHeight, MenuIcon } from './styles';\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\ninterface RouteItem {\n  group?: boolean;\n  path: string;\n  icon?: () => React.ReactNode;\n  name: string;\n  children?: RouteItem[];\n  disabled?: boolean;\n}\n\nconst routes: RouteItem[] = [\n  {\n    path: '/beneficios',\n    icon: () => <CarryOutOutlined />,\n    name: 'Beneficios'\n  },\n  {\n    path: '/usuarios',\n    icon: () => <UserOutlined />,\n    name: 'Usuários'\n  },\n  {\n    path: '/lojas',\n    icon: () => <ShopOutlined />,\n    name: 'Lojas'\n  },\n  {\n    path: '/estabelecimentos',\n    icon: () => <SolutionOutlined />,\n    name: 'Estabelecimentos'\n  },\n  {\n    path: '/instituicoes',\n    icon: () => <BankOutlined />,\n    name: 'Instituições'\n  },\n  {\n    path: '/familias',\n    icon: () => <IdcardOutlined />,\n    name: 'Famílias'\n  },\n  {\n    path: '/relatorios',\n    icon: () => <BarChartOutlined />,\n    name: 'Relatórios',\n    disabled: true\n  }\n];\n\n/**\n * A function the will return a menu item or a sidebar item based on the given item properties\n * @param item The route item object with the route metadata from the route tree\n * @param parentPath the current menu path in the tree(accounting its parent)\n */\nconst menuItem = (item: RouteItem, parentPath: string) => {\n  const key = `${parentPath}${item.path}`;\n  const maxLength = 30;\n  const name = item.name.length > maxLength ? `${item.name.slice(0, maxLength - 3)}...` : item.name;\n\n  /**\n   * A component that returns the menu item inner content\n   */\n  const innerItem = () => (\n    <>\n      {item.icon && item.icon()}\n      <span>{name}</span>\n    </>\n  );\n\n  const childItems = item.children?.map((navLink) => menuItem(navLink, key));\n\n  return item.children ? (\n    item.group ? (\n      <Menu.ItemGroup key={item.path} title={item.name} disabled={item.disabled}>\n        {childItems}\n      </Menu.ItemGroup>\n    ) : (\n      <SubMenu key={key} title={<span>{innerItem()}</span>}>\n        {childItems}\n      </SubMenu>\n    )\n  ) : (\n    <Menu.Item key={key} disabled={item.disabled}>\n      <Link to={key}>{innerItem()}</Link>\n    </Menu.Item>\n  );\n};\n\n/**\n * The main sidebar component, it contains the main urls\n */\nexport const Sidebar: React.FC = () => {\n  const location = useLocation();\n  const theme = useTheme();\n\n  // The collapse state for the sidebar\n  const [collapsed, setCollapsed] = useState(\n    Boolean(localStorage.getItem(localStorageConstraints.SIDEBAR_COLLAPSED)) || false\n  );\n  useEffect(() => localStorage.setItem(localStorageConstraints.SIDEBAR_COLLAPSED, collapsed.toString()), [collapsed]);\n\n  return (\n    <FixSider>\n      <Sider collapsible theme=\"light\" trigger={null} collapsed={collapsed} width={300}>\n        <div>\n          {/* <LogoWrapper collapsed={collapsed}>\n            <Logo show={!collapsed} src=\"/logo.png\" alt=\"Admin logo\" />\n            <Logo show={collapsed} src=\"/logo-compact.png\" alt=\"Admin logo collapsed\" />\n          </LogoWrapper> */}\n          <MenuIcon onClick={() => setCollapsed(!collapsed)}>\n            {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n          </MenuIcon>\n        </div>\n        <MenuHeight>\n          <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={[location ? location.pathname : '/']}>\n            {/* Render the links based on the nav arrays */}\n            {routes.map((navLink) => menuItem(navLink, ''))}\n          </Menu>\n        </MenuHeight>\n        <Flex vertical={collapsed} alignItems=\"center\" gap=\"sm\" justifyContent=\"space-between\">\n          {/* <UserDisplay compact={collapsed} /> */}\n          <div />\n          <Popover content=\"Sair\">\n            <Link to=\"/logout\">\n              <Button\n                type=\"ghost\"\n                style={{\n                  marginRight: collapsed ? 'auto' : theme.spacing.sm,\n                  marginLeft: 'auto',\n                  marginBottom: theme.spacing.sm\n                }}\n              >\n                <LogoutOutlined />\n              </Button>\n            </Link>\n          </Popover>\n        </Flex>\n      </Sider>\n    </FixSider>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SpinContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { Spin, Layout } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Sidebar } from '../sidebar';\nimport { SpinContainer } from './styles';\nconst { Content } = Layout;\n\nconst Wrapper = styled(Layout)`\n  height: 100%;\n`;\n\ntype AdminLayoutProps = {\n  loading?: boolean;\n};\n\n/**\n * The admin layout. Which defines the default sidebar with content in its middle section\n */\nexport const AdminLayout: React.FC<AdminLayoutProps> = (props) => {\n  return (\n    <Wrapper>\n      <Sidebar />\n      <Layout>\n        <Content>\n          {props.loading ? (\n            <SpinContainer>\n              <Spin />\n            </SpinContainer>\n          ) : (\n            props.children\n          )}\n        </Content>\n      </Layout>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const FormContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, Input, Button, Form, Typography } from 'antd';\n\nimport { requestLoginUser } from '../../redux/auth/actions';\nimport { AppState } from '../../redux/rootReducer';\n\nimport { FormContainer, PageContainer } from './styles';\n\n/**\n * Login page component\n * @param props component props\n */\nexport const LoginPage: React.FC<{}> = (props) => {\n  // Local state\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  // Redux state\n  const dispatch = useDispatch();\n  const loading = useSelector<AppState, boolean>((state) => state.authReducer.loading);\n  const error = useSelector<AppState, Error | undefined>((state) => state.authReducer.error);\n  return (\n    <PageContainer>\n      <Card>\n        <FormContainer>\n          <Form style={{ width: '300px' }}>\n            <Form.Item>\n              <Input\n                size=\"large\"\n                value={email}\n                placeholder={'Email'}\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </Form.Item>\n            <Form.Item>\n              <Input.Password\n                size=\"large\"\n                value={password}\n                placeholder={'Password'}\n                onChange={(event) => setPassword(event.target.value)}\n              />\n            </Form.Item>\n            {error && (\n              <Form.Item style={{ textAlign: 'center' }}>\n                <Typography.Text type=\"danger\">{error.message || 'Ocorreu um erro inesperado'}</Typography.Text>\n              </Form.Item>\n            )}\n            <Button\n              size=\"large\"\n              loading={loading}\n              type=\"primary\"\n              onClick={() => dispatch(requestLoginUser(email, password))}\n              style={{ width: '100%' }}\n            >\n              Entrar\n            </Button>\n          </Form>\n        </FormContainer>\n      </Card>\n    </PageContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  padding: ${(props) => props.theme.spacing.md};\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Typography, Card } from 'antd';\nimport { AppState } from '../../redux/rootReducer';\nimport { PageContainer } from './styles';\nimport { User } from '../../interfaces/user';\n\n/**\n * Dashboard page component\n * @param props component props\n */\nexport const DashboardPage: React.FC<{}> = (props) => {\n  // Redux state\n  const user = useSelector<AppState, User>((state) => state.authReducer.user as User);\n  return (\n    <PageContainer>\n      <Card>\n        <Typography.Text>{`Bem vindo ${user.name}`}</Typography.Text>\n      </Card>\n    </PageContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  padding: ${(props) => props.theme.spacing.md};\n`;\n\nexport const FormContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: rgb(0, 0, 0, 0.1);\n  top: 0;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ActionWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  > * {\n    margin-left: ${(props) => props.theme.spacing.sm};\n  }\n`;\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Button, Card, Modal, Table, Typography } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Place } from '../../interfaces/place';\nimport { requestDeletePlace, requestGetPlace } from '../../redux/place/actions';\nimport { AppState } from '../../redux/rootReducer';\nimport { ActionWrapper, PageContainer } from './styles';\n\n/**\n * List component\n * @param props component props\n */\nexport const PlaceList: React.FC<{}> = (props) => {\n  // Redux state\n  const list = useSelector<AppState, Place[]>((state) => state.placeReducer.list as Place[]);\n  // Redux actions\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(requestGetPlace());\n  }, [dispatch]);\n  return (\n    <PageContainer>\n      <Card\n        title={<Typography.Title>{`Estabelecimentos`}</Typography.Title>}\n        extra={\n          <Link to={`/estabelecimentos/criar`}>\n            <Button type=\"primary\">Criar</Button>\n          </Link>\n        }\n      >\n        <Table dataSource={list}>\n          <Table.Column title=\"Nome\" dataIndex=\"title\" />\n          <Table.Column\n            title=\"Criado\"\n            dataIndex=\"createdAt\"\n            render={(data: Place['createdAt']) => moment(data as Date).fromNow()}\n          />\n          <Table.Column\n            render={(item: Place) => {\n              return (\n                <ActionWrapper>\n                  <Link to={`/estabelecimentos/${item.id}/editar`}>\n                    <Button>Editar</Button>\n                  </Link>\n                  {/* TODO: Add alert on delete */}\n                  <Button\n                    danger\n                    onClick={() =>\n                      Modal.confirm({\n                        title: 'Você realmente quer deletar esse registro?',\n                        icon: <ExclamationCircleOutlined />,\n                        // content: 'Some descriptions',\n                        okText: 'Sim',\n                        okType: 'danger',\n                        cancelText: 'Não',\n                        onOk: () => {\n                          dispatch(requestDeletePlace(item.id as number));\n                        }\n                      })\n                    }\n                  >\n                    Excluir\n                  </Button>\n                </ActionWrapper>\n              );\n            }}\n          />\n        </Table>\n      </Card>\n    </PageContainer>\n  );\n};\n","/* eslint-disable no-template-curly-in-string */\nimport { LocaleObject } from 'yup';\n\n// Ref: https://github.com/jquense/yup/blob/master/src/locale.js\nconst printValue = require('yup/lib/util/printValue');\n\nexport const mixed: LocaleObject['mixed'] = {\n  default: '${path} está inválido',\n  required: '${path} é um campo obrigatório',\n  oneOf: '${path} precisa ser igual a algum dos seguintes valores: ${values}',\n  notOneOf: '${path} não deve ser igual a algum dos seguintes valores: ${values}',\n  notType: ({ path, type, value, originalValue }) => {\n    const isCast = originalValue != null && originalValue !== value;\n    let msg =\n      `${path} deve ser do tipo \\`${type}\\`, ` +\n      `mas o resultado final é: \\`${printValue(value, true)}\\`` +\n      (isCast ? ` (cast a partir do valor \\`${printValue(originalValue, true)}\\`).` : '.');\n\n    if (value === null) {\n      msg += `\\n Se \"null\" deve ser considerado como um valor vazio, garanta que o schema tenha \\`.nullable()\\``;\n    }\n\n    return msg;\n  }\n};\n\nexport const string: LocaleObject['string'] = {\n  length: '${path} precisa ter exatamente ${length} caracteres',\n  min: '${path} precisa ter no mínimo ${min} caracteres',\n  max: '${path} precisa ter no máximo ${max} caracteres',\n  matches: '${path} precisa dar match com: \"${regex}\"',\n  email: '${path} precisa ser um e-mail válido',\n  url: '${path} precisa ser uma URL válida',\n  trim: '${path} não pode ter espaços no fim ou no início',\n  lowercase: '${path} deve estar em minúsculo',\n  uppercase: '${path} deve estar em maiúsculo'\n};\n\nexport const number: LocaleObject['number'] & { notEqual: string } = {\n  min: '${path} precisa ser maior ou igual a ${min}',\n  max: '${path} precisa ser menor ou igual a ${max}',\n  lessThan: '${path} precisa ser menor que ${less}',\n  moreThan: '${path} precisa ser maior que ${more}',\n  notEqual: '${path} não deve ser igual a ${notEqual}',\n  positive: '${path} precisa ser um número positivo',\n  negative: '${path} precisa ser um número negativo',\n  integer: '${path} precisa ser um número inteiro'\n};\n\nexport const date: LocaleObject['date'] = {\n  min: '${path} precisa vir depois de ${min}',\n  max: '${path} previsa vir antes de ${max}'\n};\n\nexport const boolean: LocaleObject['boolean'] = {};\n\nexport const object: LocaleObject['object'] = {\n  noUnknown: '${path} não pode ter chaves não específicadas no seu object shape'\n};\n\nexport const array: LocaleObject['array'] = {\n  min: '${path} precisa ter no mínimo ${min} itens',\n  max: '${path} precisa ter ${max} ou menos itens'\n};\n","import * as yup from 'yup';\nimport { array, boolean, date, mixed, number, object, string } from '../locales/yup';\n\nyup.setLocale({\n  mixed,\n  string,\n  number,\n  date,\n  boolean,\n  object,\n  array\n});\n\n// eslint-disable-next-line import/no-default-export\nexport default yup;\n","import { Alert, Form, Input, Modal } from 'antd';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { Place } from '../../interfaces/place';\nimport { requestSavePlace } from '../../redux/place/actions';\nimport { AppState } from '../../redux/rootReducer';\nimport yup from '../../utils/yup';\n\nconst schema = yup.object().shape({\n  title: yup.string().label('Nome').required()\n});\n\n/**\n * Dashboard page component\n * @param props component props\n */\nexport const PlaceForm: React.FC<RouteComponentProps<{ id: string }>> = (props) => {\n  const history = useHistory();\n  const isCreating = props.match.params.id === 'criar';\n  const dispatch = useDispatch();\n\n  // Redux state\n  const place = useSelector<AppState, Place | undefined>(({ placeReducer }) =>\n    placeReducer.list.find((item) => item.id === Number(props.match.params.id))\n  );\n\n  const loading = useSelector<AppState, boolean>(({ placeReducer }) => placeReducer.loading);\n\n  const { handleSubmit, handleChange, values, getFieldMeta, submitForm, status, errors, touched } = useFormik({\n    initialValues: place || {\n      title: ''\n    },\n    validationSchema: schema,\n    onSubmit: (values, { setStatus }) => {\n      setStatus();\n      dispatch(\n        requestSavePlace(\n          values,\n          () => history.push('/estabelecimentos'),\n          () => setStatus('Ocorreu um erro ao realizar a requisição.')\n        )\n      );\n    }\n  });\n\n  const titleMeta = getFieldMeta('title');\n\n  return (\n    <Modal\n      title={isCreating ? 'Criar' : 'Editar'}\n      visible={true}\n      onCancel={() => history.push('/estabelecimentos')}\n      onOk={submitForm}\n      confirmLoading={loading}\n      okType={errors && Object.keys(errors).length > 0 && touched ? 'danger' : 'primary'}\n    >\n      {status && <Alert message=\"Erro no formulário\" description={status} type=\"error\" />}\n      <form onSubmit={handleSubmit}>\n        <Form layout=\"vertical\">\n          <Form.Item\n            label={'Nome'}\n            validateStatus={!!titleMeta.error && !!titleMeta.touched ? 'error' : ''}\n            help={!!titleMeta.error && !!titleMeta.touched ? titleMeta.error : undefined}\n          >\n            <Input id=\"title\" name=\"title\" onChange={handleChange} value={values.title} onPressEnter={submitForm} />\n          </Form.Item>\n        </Form>\n      </form>\n    </Modal>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { doGetTokenFailed } from '../../redux/auth/actions';\nimport { useHistory } from 'react-router-dom';\n\n/**\n * The Logout container component\n */\nexport const LogoutPage: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(doGetTokenFailed());\n    history.push('/');\n  }, [dispatch, history]);\n\n  return <div>Deslogando...</div>;\n};\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  padding: ${(props) => props.theme.spacing.md};\n`;\n\nexport const FormContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: rgb(0, 0, 0, 0.1);\n  top: 0;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ActionWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  > * {\n    margin-left: ${(props) => props.theme.spacing.sm};\n  }\n`;\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Button, Card, Modal, Table, Typography } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Benefit } from '../../interfaces/benefit';\nimport { requestDeleteBenefit, requestGetBenefit } from '../../redux/benefit/actions';\nimport { AppState } from '../../redux/rootReducer';\nimport { familyGroupList } from '../../utils/constraints';\nimport { ActionWrapper, PageContainer } from './styles';\n\n/**\n * List component\n * @param props component props\n */\nexport const BenefitList: React.FC<{}> = (props) => {\n  // Redux state\n  const list = useSelector<AppState, Benefit[]>((state) => state.benefitReducer.list as Benefit[]);\n  // Redux actions\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(requestGetBenefit());\n  }, [dispatch]);\n  return (\n    <PageContainer>\n      <Card\n        title={<Typography.Title>{`Benefícios`}</Typography.Title>}\n        extra={\n          <Link to={`/beneficios/criar`}>\n            <Button type=\"primary\">Criar</Button>\n          </Link>\n        }\n      >\n        <Table dataSource={list}>\n          <Table.Column title=\"Nome\" dataIndex=\"title\" />\n          <Table.Column\n            title=\"Grupo\"\n            dataIndex=\"groupName\"\n            render={(data: Benefit['groupName']) => familyGroupList[data]?.title || data}\n          />\n          <Table.Column title=\"Mês\" dataIndex=\"month\" />\n          <Table.Column title=\"Ano\" dataIndex=\"year\" />\n          <Table.Column title=\"Valor\" dataIndex=\"value\" render={(data: Benefit['value']) => `R$ ${data}`} />\n          <Table.Column\n            title=\"Criado\"\n            dataIndex=\"createdAt\"\n            render={(data: Benefit['createdAt']) => moment(data as Date).fromNow()}\n          />\n          <Table.Column\n            render={(item: Benefit) => {\n              return (\n                <ActionWrapper>\n                  <Link to={`/beneficios/${item.id}/editar`}>\n                    <Button>Editar</Button>\n                  </Link>\n                  {/* TODO: Add alert on delete */}\n                  <Button\n                    danger\n                    onClick={() =>\n                      Modal.confirm({\n                        title: 'Você realmente quer deletar esse registro?',\n                        icon: <ExclamationCircleOutlined />,\n                        // content: 'Some descriptions',\n                        okText: 'Sim',\n                        okType: 'danger',\n                        cancelText: 'Não',\n                        onOk: () => {\n                          dispatch(requestDeleteBenefit(item.id as number));\n                        }\n                      })\n                    }\n                  >\n                    Excluir\n                  </Button>\n                </ActionWrapper>\n              );\n            }}\n          />\n        </Table>\n      </Card>\n    </PageContainer>\n  );\n};\n","import { Alert, Col, DatePicker, Form, Input, Modal, Row, Select, Spin } from 'antd';\nimport locale from 'antd/es/date-picker/locale/pt_BR';\nimport { useFormik } from 'formik';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { Benefit } from '../../interfaces/benefit';\nimport { Institution } from '../../interfaces/institution';\nimport { requestSaveBenefit } from '../../redux/benefit/actions';\nimport { requestGetInstitution } from '../../redux/institution/actions';\nimport { AppState } from '../../redux/rootReducer';\nimport { familyGroupList } from '../../utils/constraints';\nimport yup from '../../utils/yup';\n\nconst { Option } = Select;\n\nconst schema = yup.object().shape({\n  institutionId: yup.number().label('Instituição').required(),\n  groupName: yup.string().label('Família').required(),\n  title: yup.string().label('Nome').required(),\n  month: yup.number().label('Mês').required(),\n  year: yup.number().label('Ano').required(),\n  value: yup.string().label('Valor').required()\n});\n\n/**\n * Dashboard page component\n * @param props component props\n */\nexport const BenefitForm: React.FC<RouteComponentProps<{ id: string }>> = (props) => {\n  const history = useHistory();\n  const isCreating = props.match.params.id === 'criar';\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(requestGetInstitution());\n  }, [dispatch]);\n\n  // Redux state\n  const benefit = useSelector<AppState, Benefit | undefined>(({ benefitReducer }) =>\n    benefitReducer.list.find((item) => item.id === Number(props.match.params.id))\n  );\n\n  const loading = useSelector<AppState, boolean>(({ benefitReducer }) => benefitReducer.loading);\n  const institutionLoading = useSelector<AppState, boolean>(({ institutionReducer }) => institutionReducer.loading);\n  const institutionList = useSelector<AppState, Institution[]>(({ institutionReducer }) => institutionReducer.list);\n\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    getFieldMeta,\n    submitForm,\n    status,\n    errors,\n    touched,\n    setFieldValue,\n    setFieldTouched\n  } = useFormik({\n    initialValues: benefit || {\n      institutionId: !institutionLoading && institutionList && institutionList.length > 0 ? institutionList[0].id : -1,\n      groupName: 'extreme-poverty',\n      title: '',\n      month: undefined,\n      year: undefined,\n      value: undefined\n    },\n    validationSchema: schema,\n    onSubmit: (values, { setStatus }) => {\n      setStatus();\n      dispatch(\n        requestSaveBenefit(\n          values,\n          () => history.push('/beneficios'),\n          () => setStatus('Ocorreu um erro ao realizar a requisição.')\n        )\n      );\n    }\n  });\n\n  const titleMeta = getFieldMeta('title');\n  const groupMeta = getFieldMeta('groupName');\n  const monthMeta = getFieldMeta('month');\n  const yearMeta = getFieldMeta('year');\n  const valueMeta = getFieldMeta('value');\n  const institutionIdMeta = getFieldMeta('institutionId');\n\n  return (\n    <Modal\n      title={isCreating ? 'Criar' : 'Editar'}\n      visible={true}\n      onCancel={() => history.push('/beneficios')}\n      onOk={submitForm}\n      confirmLoading={loading}\n      okType={errors && Object.keys(errors).length > 0 && touched ? 'danger' : 'primary'}\n    >\n      {status && <Alert message=\"Erro no formulário\" description={status} type=\"error\" />}\n      <form onSubmit={handleSubmit}>\n        <Form layout=\"vertical\">\n          <Form.Item\n            label={'Nome'}\n            validateStatus={!!titleMeta.error && !!titleMeta.touched ? 'error' : ''}\n            help={!!titleMeta.error && !!titleMeta.touched ? titleMeta.error : undefined}\n          >\n            <Input id=\"title\" name=\"title\" onChange={handleChange} value={values.title} onPressEnter={submitForm} />\n          </Form.Item>\n\n          <Form.Item\n            label={'Instituição'}\n            validateStatus={!!institutionIdMeta.error && !!institutionIdMeta.touched ? 'error' : ''}\n            help={!!institutionIdMeta.error && !!institutionIdMeta.touched ? institutionIdMeta.error : undefined}\n          >\n            <Select\n              disabled={institutionLoading}\n              defaultValue={values.institutionId?.toString()}\n              onSelect={(value) => setFieldValue('institutionId', Number(value))}\n              value={values.institutionId?.toString() || undefined}\n              notFoundContent={institutionLoading ? <Spin size=\"small\" /> : null}\n              onChange={(value: string) => {\n                setFieldValue('institutionId', Number(value));\n              }}\n              onBlur={() => {\n                setFieldTouched('institutionId', true);\n              }}\n            >\n              {!institutionLoading &&\n                institutionList &&\n                institutionList.length > 0 &&\n                institutionList.map((institution) => (\n                  <Option key={institution.id} value={institution.id?.toString() || '-1'}>\n                    {institution.title}\n                  </Option>\n                ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label={'Grupo'}\n            validateStatus={!!groupMeta.error && !!groupMeta.touched ? 'error' : ''}\n            help={!!groupMeta.error && !!groupMeta.touched ? groupMeta.error : undefined}\n          >\n            <Select\n              defaultValue={values.groupName}\n              onSelect={(value) => setFieldValue('groupName', value)}\n              value={values.groupName || undefined}\n              onChange={(value: string) => {\n                setFieldValue('groupName', value);\n              }}\n              onBlur={() => {\n                setFieldTouched('groupName', true);\n              }}\n            >\n              {Object.keys(familyGroupList).map((key) => (\n                <Option key={key} value={key}>\n                  {familyGroupList[key].title}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Row gutter={[16, 16]}>\n            <Col span={12}>\n              <Form.Item\n                label={'Mês'}\n                validateStatus={!!monthMeta.error && !!monthMeta.touched ? 'error' : ''}\n                help={!!monthMeta.error && !!monthMeta.touched ? monthMeta.error : undefined}\n              >\n                <DatePicker.MonthPicker\n                  format={'MMMM'}\n                  locale={locale}\n                  style={{ width: '100%' }}\n                  defaultValue={values.month ? moment(values.month, 'MM') : undefined}\n                  onChange={(date) => setFieldValue('month', Number(date?.format('MM')))}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label={'Ano'}\n                validateStatus={!!yearMeta.error && !!yearMeta.touched ? 'error' : ''}\n                help={!!yearMeta.error && !!yearMeta.touched ? yearMeta.error : undefined}\n              >\n                <DatePicker.YearPicker\n                  format={'YYYY'}\n                  locale={locale}\n                  style={{ width: '100%' }}\n                  defaultValue={values.year ? moment(values.year, 'YYYY') : undefined}\n                  onChange={(date) => setFieldValue('year', Number(date?.format('YYYY')))}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item\n            label=\"Valor\"\n            validateStatus={!!valueMeta.error && !!valueMeta.touched ? 'error' : ''}\n            help={!!valueMeta.error && !!valueMeta.touched ? valueMeta.error : undefined}\n          >\n            <Input id=\"value\" name=\"value\" prefix=\"R$\" onChange={handleChange} value={values.value} />\n          </Form.Item>\n        </Form>\n      </form>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  padding: ${(props) => props.theme.spacing.md};\n`;\n\nexport const FormContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: rgb(0, 0, 0, 0.1);\n  top: 0;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ActionWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  > * {\n    margin-left: ${(props) => props.theme.spacing.sm};\n  }\n`;\n","/**\n * Mask to brazilian format of phone\n */\nexport const formatPhone = (v?: string | null): string => {\n  if (!v) return '';\n  v = v.replace(/\\D/g, '');\n  if (v.length > 9) {\n    v = v.replace(/^(\\d{2})(\\d)/g, '($1) $2');\n    v = v.replace(/(\\d)(\\d{4})$/, '$1-$2');\n  } else if (v.length > 4) {\n    v = v.replace(/(\\d)(\\d{4})$/, '$1-$2');\n  }\n  return v;\n};\n\n/**\n * Mask and format color string\n */\nexport const formatColor = (v?: string | null): string => {\n  if (!v) return '';\n  // Remove non HEX characters\n  v = v.replace(/([^A-Fa-f0-9])/g, '');\n  return '#' + v;\n};\n\n/**\n * Mask and format CPF string\n */\nexport const formatCPF = (v?: string | null): string => {\n  if (!v) return '';\n  // Remove anything that is not a number\n  v = v.replace(/\\D/g, '').substr(0, 11);\n  v = v.replace(/^(\\d{3})(\\d)/, '$1.$2');\n  v = v.replace(/^(\\d{3}.\\d{3})(\\d)/, '$1.$2');\n  v = v.replace(/^(\\d{3}.\\d{3}.\\d{3})(\\d{1,2})/, '$1-$2');\n  return v;\n};\n\n/**\n * Mask and format CNPJ string\n */\nexport const formatCNPJ = (v?: string | null): string => {\n  if (!v) return '';\n  // Remove anything that is not a number\n  v = v.replace(/\\D/g, '').substr(0, 14);\n  v = v.replace(/^(\\d{2})(\\d)/, '$1.$2');\n  v = v.replace(/^(\\d{2}.\\d{3})(\\d)/, '$1.$2');\n  v = v.replace(/^(\\d{2}.\\d{3}.\\d{3})(\\d)/, '$1/$2');\n  v = v.replace(/^(\\d{2}.\\d{3}.\\d{3}\\/\\d{4})(\\d{1,2})/, '$1-$2');\n  return v;\n};\n\n/**\n * Format CEP string\n */\nexport const formatCEP = (v?: string | null): string => {\n  if (!v) return '';\n  // Remove anything that is not a number\n  v = v.replace(/\\D/g, '').substr(0, 8);\n  v = v.replace(/^(\\d{5})(\\d)/, '$1-$2');\n  return v;\n};\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Button, Card, Modal, Table, Typography, Spin } from 'antd';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { PlaceStore } from '../../interfaces/placeStore';\nimport { requestDeletePlaceStore, requestGetPlaceStore } from '../../redux/placeStore/actions';\nimport { AppState } from '../../redux/rootReducer';\nimport { ActionWrapper, PageContainer } from './styles';\nimport { formatCNPJ } from '../../utils/string';\nimport { Place } from '../../interfaces/place';\nimport { requestGetPlace } from '../../redux/place/actions';\n\n/**\n * List component\n * @param props component props\n */\nexport const PlaceStoreList: React.FC<{}> = () => {\n  // Redux state\n  const list = useSelector<AppState, PlaceStore[]>((state) => state.placeStoreReducer.list as PlaceStore[]);\n  const placeLoading = useSelector<AppState, boolean>(({ placeReducer }) => placeReducer.loading);\n  const placeList = useSelector<AppState, Place[]>(({ placeReducer }) => placeReducer.list);\n  // Redux actions\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!placeList || placeList.length <= 0) {\n      dispatch(requestGetPlace());\n    }\n\n    dispatch(requestGetPlaceStore());\n  }, [dispatch, placeList]);\n  return (\n    <PageContainer>\n      <Card\n        title={<Typography.Title>{`Lojas`}</Typography.Title>}\n        extra={\n          <Link to={`/lojas/criar`}>\n            <Button type=\"primary\">Criar</Button>\n          </Link>\n        }\n      >\n        <Table dataSource={list}>\n          <Table.Column\n            title=\"Estabelecimento\"\n            dataIndex=\"placeId\"\n            render={(data: PlaceStore['placeId']) =>\n              placeLoading || !placeList || placeList.length <= 0 ? (\n                <Spin size=\"small\" />\n              ) : (\n                placeList.find((place) => place.id === data)?.title\n              )\n            }\n          />\n          <Table.Column title=\"Loja\" dataIndex=\"title\" />\n          <Table.Column title=\"CNPJ\" dataIndex=\"cnpj\" render={(data: PlaceStore['cnpj']) => formatCNPJ(data)} />\n          <Table.Column title=\"Endereço\" dataIndex=\"address\" />\n          <Table.Column\n            render={(item: PlaceStore) => {\n              return (\n                <ActionWrapper>\n                  <Link to={`/lojas/${item.id}/editar`}>\n                    <Button>Editar</Button>\n                  </Link>\n                  {/* TODO: Add alert on delete */}\n                  <Button\n                    danger\n                    onClick={() =>\n                      Modal.confirm({\n                        title: 'Você realmente quer deletar esse registro?',\n                        icon: <ExclamationCircleOutlined />,\n                        // content: 'Some descriptions',\n                        okText: 'Sim',\n                        okType: 'danger',\n                        cancelText: 'Não',\n                        onOk: () => {\n                          dispatch(requestDeletePlaceStore(item.id as number));\n                        }\n                      })\n                    }\n                  >\n                    Excluir\n                  </Button>\n                </ActionWrapper>\n              );\n            }}\n          />\n        </Table>\n      </Card>\n    </PageContainer>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { Input } from 'antd';\n\nexport type InputFormatterProps = React.ComponentProps<typeof Input> & {\n  setValue?: (value: string) => void;\n  formatter?: (value: string) => string;\n  parser?: (value: string) => string;\n};\n\n/**\n * An input with a cnpj formatter\n */\nexport const InputFormatter: React.FC<InputFormatterProps> = ({ setValue, formatter, parser, onChange, ...props }) => {\n  /**\n   * Handle onChange event in the input\n   */\n  const handleChangeValue = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (setValue) {\n        const value = formatter ? formatter(event.target.value) : event.target.value;\n        setValue(parser ? parser(value) : value);\n      } else if (onChange) {\n        onChange(event);\n      }\n    },\n    [formatter, parser, onChange, setValue]\n  );\n\n  return <Input {...props} onChange={handleChangeValue} />;\n};\n","import { Alert, Form, Modal, Input, Select, Spin } from 'antd';\nimport { useFormik } from 'formik';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { PlaceStore } from '../../interfaces/placeStore';\nimport { AppState } from '../../redux/rootReducer';\nimport yup from '../../utils/yup';\nimport { requestGetPlace } from '../../redux/place/actions';\nimport { Place } from '../../interfaces/place';\nimport { requestSavePlaceStore } from '../../redux/placeStore/actions';\nimport { InputFormatter } from '../../components/inputFormatter';\nimport { formatCNPJ } from '../../utils/string';\n\nconst { Option } = Select;\n\nconst schema = yup.object().shape({\n  title: yup.string().label('Loja').required(),\n  placeId: yup.number().label('Estabelecimento').required(),\n  cnpj: yup.string().label('CNPJ').required(),\n  address: yup.string().label('Endereço').required()\n});\n\n/**\n * Dashboard page component\n * @param props component props\n */\nexport const PlaceStoreForm: React.FC<RouteComponentProps<{ id: string }>> = (props) => {\n  const history = useHistory();\n  const isCreating = props.match.params.id === 'criar';\n\n  // Redux state\n  const placeStore = useSelector<AppState, PlaceStore | undefined>(({ placeStoreReducer }) =>\n    placeStoreReducer.list.find((item) => item.id === Number(props.match.params.id))\n  );\n  const loading = useSelector<AppState, boolean>(({ placeStoreReducer }) => placeStoreReducer.loading);\n  const placeLoading = useSelector<AppState, boolean>(({ placeReducer }) => placeReducer.loading);\n  const placeList = useSelector<AppState, Place[]>(({ placeReducer }) => placeReducer.list);\n\n  // Redux actions\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!placeList || placeList.length <= 0) {\n      dispatch(requestGetPlace());\n    }\n  }, [dispatch, placeList]);\n\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    getFieldMeta,\n    submitForm,\n    status,\n    errors,\n    touched,\n    setFieldValue,\n    setFieldTouched\n  } = useFormik({\n    initialValues: placeStore || {\n      placeId: !placeLoading && placeList && placeList.length > 0 ? placeList[0].id : -1,\n      title: '',\n      cnpj: '',\n      address: ''\n    },\n    validationSchema: schema,\n    onSubmit: (values, { setStatus }) => {\n      setStatus();\n      dispatch(\n        requestSavePlaceStore(\n          values,\n          () => history.push('/lojas'),\n          () => setStatus('Ocorreu um erro ao realizar a requisição.')\n        )\n      );\n    }\n  });\n\n  const titleMeta = getFieldMeta('title');\n  const cnpjMeta = getFieldMeta('cnpj');\n  const addressMeta = getFieldMeta('address');\n  const placeIdMeta = getFieldMeta('placeId');\n\n  return (\n    <Modal\n      title={isCreating ? 'Criar' : 'Editar'}\n      visible={true}\n      onCancel={() => history.push('/lojas')}\n      onOk={submitForm}\n      confirmLoading={loading}\n      okType={errors && Object.keys(errors).length > 0 && touched ? 'danger' : 'primary'}\n    >\n      {status && <Alert message=\"Erro no formulário\" description={status} type=\"error\" />}\n      <form onSubmit={handleSubmit}>\n        <Form layout=\"vertical\">\n          <Form.Item\n            label={'Loja'}\n            validateStatus={!!titleMeta.error && !!titleMeta.touched ? 'error' : ''}\n            help={!!titleMeta.error && !!titleMeta.touched ? titleMeta.error : undefined}\n          >\n            <Input id=\"title\" name=\"title\" onChange={handleChange} value={values.title} onPressEnter={submitForm} />\n          </Form.Item>\n\n          <Form.Item\n            label={'Estabelecimento'}\n            validateStatus={!!placeIdMeta.error && !!placeIdMeta.touched ? 'error' : ''}\n            help={!!placeIdMeta.error && !!placeIdMeta.touched ? placeIdMeta.error : undefined}\n          >\n            <Select\n              disabled={placeLoading}\n              defaultValue={values.placeId?.toString()}\n              onSelect={(value) => setFieldValue('placeId', Number(value))}\n              value={values.placeId?.toString() || undefined}\n              notFoundContent={placeLoading ? <Spin size=\"small\" /> : null}\n              onChange={(value: string) => {\n                setFieldValue('placeId', Number(value));\n              }}\n              onBlur={() => {\n                setFieldTouched('placeId', true);\n              }}\n            >\n              {!placeLoading &&\n                placeList &&\n                placeList.length > 0 &&\n                placeList.map((place) => (\n                  <Option key={place.title} value={place.id?.toString() || '-1'}>\n                    {place.title}\n                  </Option>\n                ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label={'CNPJ'}\n            validateStatus={!!cnpjMeta.error && !!cnpjMeta.touched ? 'error' : ''}\n            help={!!cnpjMeta.error && !!cnpjMeta.touched ? cnpjMeta.error : undefined}\n          >\n            <InputFormatter\n              id=\"cnpj\"\n              name=\"cnpj\"\n              onPressEnter={submitForm}\n              value={formatCNPJ(values.cnpj)}\n              setValue={(value) => setFieldValue('cnpj', value)}\n              formatter={(value) => formatCNPJ(value?.toString())}\n              parser={(value) => (value ? value.replace(/[./-]/g, '').trim() : '')}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label={'Endereço'}\n            validateStatus={!!addressMeta.error && !!addressMeta.touched ? 'error' : ''}\n            help={!!addressMeta.error && !!addressMeta.touched ? addressMeta.error : undefined}\n          >\n            <Input\n              id=\"address\"\n              name=\"address\"\n              onChange={handleChange}\n              value={values.address}\n              onPressEnter={submitForm}\n            />\n          </Form.Item>\n        </Form>\n      </form>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  padding: ${(props) => props.theme.spacing.md};\n`;\n\nexport const FormContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: rgb(0, 0, 0, 0.1);\n  top: 0;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ActionWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  > * {\n    margin-left: ${(props) => props.theme.spacing.sm};\n  }\n`;\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Button, Card, Modal, Spin, Table, Tag, Typography } from 'antd';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { PlaceStore } from '../../interfaces/placeStore';\nimport { User } from '../../interfaces/user';\nimport { requestGetPlaceStore } from '../../redux/placeStore/actions';\nimport { AppState } from '../../redux/rootReducer';\nimport { requestDeleteUser, requestGetUser } from '../../redux/user/actions';\nimport { formatCPF } from '../../utils/string';\nimport { roleList } from './../../utils/constraints';\nimport { ActionWrapper, PageContainer } from './styles';\n\n/**\n * List component\n * @param props component props\n */\nexport const UserList: React.FC<{}> = () => {\n  // Redux state\n  const list = useSelector<AppState, User[]>((state) => state.userReducer.list as User[]);\n  const placeStoreLoading = useSelector<AppState, boolean>(({ placeStoreReducer }) => placeStoreReducer.loading);\n  const placeStoreList = useSelector<AppState, PlaceStore[]>(({ placeStoreReducer }) => placeStoreReducer.list);\n  // Redux actions\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!placeStoreList || placeStoreList.length <= 0) {\n      dispatch(requestGetPlaceStore());\n    }\n\n    dispatch(requestGetUser());\n  }, [dispatch, placeStoreList]);\n  return (\n    <PageContainer>\n      <Card\n        title={<Typography.Title>{`Usuários`}</Typography.Title>}\n        extra={\n          <Link to={`/usuarios/criar`}>\n            <Button type=\"primary\">Criar</Button>\n          </Link>\n        }\n      >\n        <Table dataSource={list}>\n          <Table.Column title=\"Nome\" dataIndex=\"name\" />\n          <Table.Column title=\"Email\" dataIndex=\"email\" />\n          <Table.Column\n            title=\"Ativo\"\n            dataIndex=\"active\"\n            render={(active: User['active']) => <Tag>{active ? 'Ativo' : 'Inativo'}</Tag>}\n          />\n          <Table.Column title=\"CPF\" dataIndex=\"cpf\" render={(data: User['cpf']) => formatCPF(data)} />\n          <Table.Column title=\"Cargo\" dataIndex=\"role\" render={(data: User['role']) => roleList[data]?.title || data} />\n          <Table.Column\n            title=\"Loja\"\n            dataIndex=\"placeStoreId\"\n            render={(data: User['placeStoreId']) =>\n              placeStoreLoading || !placeStoreList || placeStoreList.length <= 0 ? (\n                <Spin size=\"small\" />\n              ) : (\n                placeStoreList.find((place) => place.id === data)?.title\n              )\n            }\n          />\n          <Table.Column\n            render={(item: User) => {\n              return (\n                <ActionWrapper>\n                  <Link to={`/usuarios/${item.id}/editar`}>\n                    <Button>Editar</Button>\n                  </Link>\n                  {/* TODO: Add alert on delete */}\n                  <Button\n                    danger\n                    onClick={() =>\n                      Modal.confirm({\n                        title: 'Você realmente quer deletar esse registro?',\n                        icon: <ExclamationCircleOutlined />,\n                        // content: 'Some descriptions',\n                        okText: 'Sim',\n                        okType: 'danger',\n                        cancelText: 'Não',\n                        onOk: () => {\n                          dispatch(requestDeleteUser(item.id as number));\n                        }\n                      })\n                    }\n                  >\n                    Excluir\n                  </Button>\n                </ActionWrapper>\n              );\n            }}\n          />\n        </Table>\n      </Card>\n    </PageContainer>\n  );\n};\n","import { Alert, Form, Input, Modal, Select, Spin, Checkbox } from 'antd';\nimport { useFormik } from 'formik';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { InputFormatter } from '../../components/inputFormatter';\nimport { PlaceStore } from '../../interfaces/placeStore';\nimport { User } from '../../interfaces/user';\nimport { requestGetPlaceStore } from '../../redux/placeStore/actions';\nimport { AppState } from '../../redux/rootReducer';\nimport { requestSaveUser } from '../../redux/user/actions';\nimport { formatCPF } from '../../utils/string';\nimport yup from '../../utils/yup';\nimport { roleList } from './../../utils/constraints';\n\nconst { Option } = Select;\n\nconst schema = yup.object().shape({\n  placeStoreId: yup.number().label('Loja').required(),\n  name: yup.string().label('Nome').required(),\n  password: yup.string().label('Senha').required(),\n  cpf: yup.string().label('CPF').required(),\n  email: yup.string().label('Email').required(),\n  role: yup.string().label('Cargo').required()\n});\n\n/**\n * Dashboard page component\n * @param props component props\n */\nexport const UserForm: React.FC<RouteComponentProps<{ id: string }>> = (props) => {\n  const history = useHistory();\n  const isCreating = props.match.params.id === 'criar';\n\n  // Redux state\n  const user = useSelector<AppState, User | undefined>(({ userReducer }) =>\n    userReducer.list.find((item) => item.id === Number(props.match.params.id))\n  );\n  const loading = useSelector<AppState, boolean>(({ userReducer }) => userReducer.loading);\n  const placeStoreLoading = useSelector<AppState, boolean>(({ placeStoreReducer }) => placeStoreReducer.loading);\n  const placeStoreList = useSelector<AppState, PlaceStore[]>(({ placeStoreReducer }) => placeStoreReducer.list);\n\n  // Redux actions\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!placeStoreList || placeStoreList.length <= 0) {\n      dispatch(requestGetPlaceStore());\n    }\n  }, [dispatch, placeStoreList]);\n\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    getFieldMeta,\n    submitForm,\n    status,\n    errors,\n    touched,\n    setFieldValue,\n    setFieldTouched,\n    getFieldProps\n  } = useFormik({\n    initialValues: user || {\n      placeStoreId: !placeStoreLoading && placeStoreList && placeStoreList.length > 0 ? placeStoreList[0].id : -1,\n      name: '',\n      password: '',\n      cpf: '',\n      email: '',\n      role: 'admin',\n      active: false\n    },\n    validationSchema: schema,\n    onSubmit: (values, { setStatus }) => {\n      setStatus();\n      dispatch(\n        requestSaveUser(\n          values,\n          () => history.push('/usuarios'),\n          () => setStatus('Ocorreu um erro ao realizar a requisição.')\n        )\n      );\n    }\n  });\n\n  const nameMeta = getFieldMeta('name');\n  const passwordMeta = getFieldMeta('password');\n  const cpfMeta = getFieldMeta('cpf');\n  const emailMeta = getFieldMeta('email');\n  const placeStoreMeta = getFieldMeta('placeStoreId');\n  const roleMeta = getFieldMeta('role');\n  const activeMeta = getFieldMeta('active');\n  const activeField = getFieldProps('active');\n\n  return (\n    <Modal\n      title={isCreating ? 'Criar' : 'Editar'}\n      visible={true}\n      onCancel={() => history.push('/usuarios')}\n      onOk={submitForm}\n      confirmLoading={loading}\n      okType={errors && Object.keys(errors).length > 0 && touched ? 'danger' : 'primary'}\n    >\n      {status && <Alert message=\"Erro no formulário\" description={status} type=\"error\" />}\n      <form onSubmit={handleSubmit}>\n        <Form layout=\"vertical\">\n          <Form.Item\n            label={'Nome'}\n            validateStatus={!!nameMeta.error && !!nameMeta.touched ? 'error' : ''}\n            help={!!nameMeta.error && !!nameMeta.touched ? nameMeta.error : undefined}\n          >\n            <Input id=\"name\" name=\"name\" onChange={handleChange} value={values.name} onPressEnter={submitForm} />\n          </Form.Item>\n\n          {isCreating && (\n            <Form.Item\n              label={'Senha'}\n              validateStatus={!!passwordMeta.error && !!passwordMeta.touched ? 'error' : ''}\n              help={!!passwordMeta.error && !!passwordMeta.touched ? passwordMeta.error : undefined}\n            >\n              <Input\n                id=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                value={values.password}\n                onPressEnter={submitForm}\n              />\n            </Form.Item>\n          )}\n\n          <Form.Item\n            label={'CPF'}\n            validateStatus={!!cpfMeta.error && !!cpfMeta.touched ? 'error' : ''}\n            help={!!cpfMeta.error && !!cpfMeta.touched ? cpfMeta.error : undefined}\n          >\n            <InputFormatter\n              id=\"cpf\"\n              name=\"cpf\"\n              onPressEnter={submitForm}\n              value={formatCPF(values.cpf)}\n              setValue={(value) => setFieldValue('cpf', value)}\n              formatter={(value) => formatCPF(value?.toString())}\n              parser={(value) => (value ? value.replace(/[./-]/g, '').trim() : '')}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label={'Email'}\n            validateStatus={!!emailMeta.error && !!emailMeta.touched ? 'error' : ''}\n            help={!!emailMeta.error && !!emailMeta.touched ? emailMeta.error : undefined}\n          >\n            <Input id=\"email\" name=\"email\" onChange={handleChange} value={values.email} onPressEnter={submitForm} />\n          </Form.Item>\n\n          <Form.Item\n            label={'Loja'}\n            validateStatus={!!placeStoreMeta.error && !!placeStoreMeta.touched ? 'error' : ''}\n            help={!!placeStoreMeta.error && !!placeStoreMeta.touched ? placeStoreMeta.error : undefined}\n          >\n            <Select\n              disabled={placeStoreLoading}\n              defaultValue={values.placeStoreId?.toString()}\n              onSelect={(value) => setFieldValue('placeStoreId', Number(value))}\n              value={values.placeStoreId?.toString() || undefined}\n              notFoundContent={placeStoreLoading ? <Spin size=\"small\" /> : null}\n              onChange={(value: string) => {\n                setFieldValue('placeStoreId', Number(value));\n              }}\n              onBlur={() => {\n                setFieldTouched('placeStoreId', true);\n              }}\n            >\n              {!placeStoreLoading &&\n                placeStoreList &&\n                placeStoreList.length > 0 &&\n                placeStoreList.map((placeStore) => (\n                  <Option key={placeStore.id} value={placeStore.id?.toString() || '-1'}>\n                    {placeStore.title}\n                  </Option>\n                ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label={'Cargo'}\n            validateStatus={!!roleMeta.error && !!roleMeta.touched ? 'error' : ''}\n            help={!!roleMeta.error && !!roleMeta.touched ? roleMeta.error : undefined}\n          >\n            <Select\n              defaultValue={values.role}\n              onSelect={(value) => setFieldValue('role', value)}\n              value={values.role || undefined}\n              onChange={(value: string) => {\n                setFieldValue('role', value);\n              }}\n              onBlur={() => {\n                setFieldTouched('role', true);\n              }}\n            >\n              {Object.keys(roleList).map((key) => (\n                <Option key={key} value={key}>\n                  {roleList[key].title}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            validateStatus={!!activeMeta.error && !!activeMeta.touched ? 'error' : ''}\n            help={!!activeMeta.error && !!activeMeta.touched ? activeMeta.error : undefined}\n          >\n            <Checkbox checked={values.active} {...activeField}>\n              Ativo\n            </Checkbox>\n          </Form.Item>\n        </Form>\n      </form>\n    </Modal>\n  );\n};\n","import { Alert, Form, Input, Modal } from 'antd';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { requestSaveInstitution } from '../../redux/institution/actions';\nimport { AppState } from '../../redux/rootReducer';\nimport yup from '../../utils/yup';\nimport { Institution } from '../../interfaces/institution';\n\nconst schema = yup.object().shape({\n  title: yup.string().label('Nome').required()\n});\n\n/**\n * Dashboard page component\n * @param props component props\n */\nexport const InstitutionForm: React.FC<RouteComponentProps<{ id: string }>> = (props) => {\n  const history = useHistory();\n  const isCreating = props.match.params.id === 'criar';\n  const dispatch = useDispatch();\n\n  // Redux state\n  const institution = useSelector<AppState, Institution | undefined>(({ institutionReducer }) =>\n    institutionReducer.list.find((item) => item.id === Number(props.match.params.id))\n  );\n\n  const loading = useSelector<AppState, boolean>(({ institutionReducer }) => institutionReducer.loading);\n\n  const { handleSubmit, handleChange, values, getFieldMeta, submitForm, status, errors, touched } = useFormik({\n    initialValues: institution || {\n      title: ''\n    },\n    validationSchema: schema,\n    onSubmit: (values, { setStatus }) => {\n      setStatus();\n      dispatch(\n        requestSaveInstitution(\n          values,\n          () => history.push('/instituicoes'),\n          () => setStatus('Ocorreu um erro ao realizar a requisição.')\n        )\n      );\n    }\n  });\n\n  const titleMeta = getFieldMeta('title');\n\n  return (\n    <Modal\n      title={isCreating ? 'Criar' : 'Editar'}\n      visible={true}\n      onCancel={() => history.push('/instituicoes')}\n      onOk={submitForm}\n      confirmLoading={loading}\n      okType={errors && Object.keys(errors).length > 0 && touched ? 'danger' : 'primary'}\n    >\n      {status && <Alert message=\"Erro no formulário\" description={status} type=\"error\" />}\n      <form onSubmit={handleSubmit}>\n        <Form layout=\"vertical\">\n          <Form.Item\n            label={'Nome'}\n            validateStatus={!!titleMeta.error && !!titleMeta.touched ? 'error' : ''}\n            help={!!titleMeta.error && !!titleMeta.touched ? titleMeta.error : undefined}\n          >\n            <Input id=\"title\" name=\"title\" onChange={handleChange} value={values.title} onPressEnter={submitForm} />\n          </Form.Item>\n        </Form>\n      </form>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  padding: ${(props) => props.theme.spacing.md};\n`;\n\nexport const FormContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: rgb(0, 0, 0, 0.1);\n  top: 0;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ActionWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  > * {\n    margin-left: ${(props) => props.theme.spacing.sm};\n  }\n`;\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Button, Card, Modal, Table, Typography } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Institution } from '../../interfaces/institution';\nimport { requestDeleteInstitution, requestGetInstitution } from '../../redux/institution/actions';\nimport { AppState } from '../../redux/rootReducer';\nimport { ActionWrapper, PageContainer } from './styles';\n\n/**\n * List component\n * @param props component props\n */\nexport const InstitutionList: React.FC<{}> = (props) => {\n  // Redux state\n  const list = useSelector<AppState, Institution[]>((state) => state.institutionReducer.list as Institution[]);\n  // Redux actions\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(requestGetInstitution());\n  }, [dispatch]);\n  return (\n    <PageContainer>\n      <Card\n        title={<Typography.Title>{`Instituições`}</Typography.Title>}\n        extra={\n          <Link to={`/instituicoes/criar`}>\n            <Button type=\"primary\">Criar</Button>\n          </Link>\n        }\n      >\n        <Table dataSource={list}>\n          <Table.Column title=\"Nome\" dataIndex=\"title\" />\n          <Table.Column\n            title=\"Criado\"\n            dataIndex=\"createdAt\"\n            render={(data: Institution['createdAt']) => moment(data as Date).fromNow()}\n          />\n          <Table.Column\n            render={(item: Institution) => {\n              return (\n                <ActionWrapper>\n                  <Link to={`/instituicoes/${item.id}/editar`}>\n                    <Button>Editar</Button>\n                  </Link>\n                  {/* TODO: Add alert on delete */}\n                  <Button\n                    danger\n                    onClick={() =>\n                      Modal.confirm({\n                        title: 'Você realmente quer deletar esse registro?',\n                        icon: <ExclamationCircleOutlined />,\n                        // content: 'Some descriptions',\n                        okText: 'Sim',\n                        okType: 'danger',\n                        cancelText: 'Não',\n                        onOk: () => {\n                          dispatch(requestDeleteInstitution(item.id as number));\n                        }\n                      })\n                    }\n                  >\n                    Excluir\n                  </Button>\n                </ActionWrapper>\n              );\n            }}\n          />\n        </Table>\n      </Card>\n    </PageContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  padding: ${(props) => props.theme.spacing.md};\n`;\n","import { InboxOutlined } from '@ant-design/icons';\nimport { Descriptions, List, Card, Spin, Typography, Upload, Button, Alert } from 'antd';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSVReport } from '../../interfaces/csvReport';\nimport { requestUploadFamilyFile, doUploadFamilyFileRestart } from '../../redux/families/actions';\nimport { AppState } from '../../redux/rootReducer';\nimport { PageContainer } from './styles';\nimport { Flex } from '../../components/flex';\n\nconst { Dragger } = Upload;\n\n/**\n * List component\n * @param props component props\n */\nexport const FamiliesList: React.FC<{}> = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector<AppState, boolean>(({ familiesReducer }) => familiesReducer.loading);\n  const error = useSelector<AppState, string | undefined>(({ familiesReducer }) => familiesReducer.error);\n  const uploadReport = useSelector<AppState, CSVReport | undefined>(\n    ({ familiesReducer }) => familiesReducer.uploadReport\n  );\n\n  return (\n    <PageContainer>\n      <Card title={<Typography.Title>{`Famílias`}</Typography.Title>}>\n        {error && (\n          <Alert message=\"Erro no formulário\" description={error} type=\"error\" style={{ marginBottom: '20px' }} />\n        )}\n        {uploadReport ? (\n          <>\n            <Descriptions\n              bordered\n              title=\"Relatório dos registros\"\n              size=\"small\"\n              column={4}\n              style={{ marginBottom: '20px' }}\n            >\n              <Descriptions.Item label=\"Criados\">{uploadReport.created}</Descriptions.Item>\n              <Descriptions.Item label=\"Atualizados\">{uploadReport.updated}</Descriptions.Item>\n              <Descriptions.Item label=\"Removidos\">{uploadReport.deleted}</Descriptions.Item>\n              <Descriptions.Item label=\"Errados\">{uploadReport.wrong}</Descriptions.Item>\n            </Descriptions>\n            {uploadReport.report && uploadReport.report.length > 0 && (\n              <List\n                size=\"small\"\n                bordered\n                dataSource={uploadReport.report}\n                renderItem={(item) => <List.Item>{item}</List.Item>}\n                style={{ marginBottom: '20px' }}\n              />\n            )}\n            <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n              <Button\n                htmlType=\"button\"\n                // disabled={!!(errors && Object.keys(errors).length > 0 && touched) || !family || invalidConsumptionValue}\n                type=\"primary\"\n                onClick={() => dispatch(doUploadFamilyFileRestart())}\n              >\n                Enviar novamente\n              </Button>\n            </Flex>\n          </>\n        ) : (\n          <>\n            <Spin spinning={loading}>\n              <Dragger\n                id=\"file\"\n                name=\"file\"\n                accept=\".csv\"\n                action={undefined}\n                showUploadList={false}\n                customRequest={({ file }) => dispatch(requestUploadFamilyFile(file))}\n              >\n                <p className=\"ant-upload-drag-icon\">\n                  <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Clique ou arraste um arquivo nesta área para enviar</p>\n                <p className=\"ant-upload-hint\">O arquivo precisa ser do tipo CSV</p>\n              </Dragger>\n            </Spin>\n          </>\n        )}\n      </Card>\n    </PageContainer>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../redux/rootReducer';\nimport { User } from '../interfaces/user';\nimport { AdminLayout } from '../components/adminLayout';\n\n// Pages\nimport { LoginPage } from './login';\nimport { DashboardPage } from './dashboard';\nimport { PlaceList } from './places/list';\nimport { PlaceForm } from './places/form';\nimport { useRefreshToken } from '../utils/auth';\nimport { LogoutPage } from './logout';\nimport { BenefitList } from './benefits/list';\nimport { BenefitForm } from './benefits/form';\nimport { PlaceStoreList } from './placeStore/list';\nimport { PlaceStoreForm } from './placeStore/form';\nimport { UserList } from './user/list';\nimport { UserForm } from './user/form';\nimport { InstitutionForm } from './institutions/form';\nimport { InstitutionList } from './institutions/list';\nimport { FamiliesList } from './families/list';\n\n/**\n * Router available only for logged users\n * @param props component props\n */\nconst PrivateRouter: React.FC<{}> = (props) => {\n  const loading = useRefreshToken();\n\n  return (\n    <AdminLayout loading={loading}>\n      <>\n        <Route path=\"/logout\" component={LogoutPage} />\n        {/* Place routes */}\n        <Route path=\"/estabelecimentos\" component={PlaceList} />\n        <Route path=\"/estabelecimentos/:id\" component={PlaceForm} />\n        {/* Benefit routes */}\n        <Route path=\"/beneficios\" component={BenefitList} />\n        <Route path=\"/beneficios/:id\" component={BenefitForm} />\n        {/* Store routes */}\n        <Route path=\"/lojas\" component={PlaceStoreList} />\n        <Route path=\"/lojas/:id\" component={PlaceStoreForm} />\n        {/* User routes */}\n        <Route path=\"/usuarios\" component={UserList} />\n        <Route path=\"/usuarios/:id\" component={UserForm} />\n        {/* Institution routes */}\n        <Route path=\"/instituicoes\" component={InstitutionList} />\n        <Route path=\"/instituicoes/:id\" component={InstitutionForm} />\n        {/* Institution routes */}\n        <Route path=\"/familias\" component={FamiliesList} />\n        {/* Dashboard */}\n        <Route path=\"/\" component={DashboardPage} exact />\n      </>\n    </AdminLayout>\n  );\n};\n\n/**\n * Router available when the user is not logged\n * @param props component props\n */\nconst PublicRouter: React.FC<{}> = (props) => {\n  return (\n    <Switch>\n      <Route path=\"*\">\n        <LoginPage />\n      </Route>\n    </Switch>\n  );\n};\n\n/**\n * Router component\n * @param props router props\n */\nexport const Router: React.FC<{}> = (props) => {\n  const user = useSelector<AppState, User | undefined>((state) => state.authReducer.user);\n\n  return (\n    <BrowserRouter>\n      {user && user.role === 'admin' ? <PrivateRouter {...props} /> : <PublicRouter {...props} />}\n    </BrowserRouter>\n  );\n};\n","import jwt from 'jsonwebtoken';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { requestGetToken } from '../redux/auth/actions';\nimport { AppState } from '../redux/rootReducer';\n\n/**\n * A hook that refreshes the token and returns if it's loading.\n * This hook must ONLY be called ONCE. Generally in the private router function.\n */\nexport const useRefreshToken = () => {\n  // Gets the actual token from redux\n  const token = useSelector<AppState, string | undefined>(({ authReducer }) => authReducer.token);\n\n  // Gets the current URL from router\n  const location = useLocation();\n\n  // Gets the dispatch function to be used later\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // If the token exists\n    if (token) {\n      // Read its payload\n      const payload = jwt.decode(token) as { [key: string]: any };\n\n      // If the paylod expiration timestamp has expired and we have an url\n      if (payload && payload.exp < Date.now() / 1000 && location.pathname) {\n        // Try to refresh the token\n        dispatch(requestGetToken());\n      }\n    } else {\n      // If the token does not exist, tries to fetch it\n      dispatch(requestGetToken());\n    }\n  }, [dispatch, token, location.pathname]); // When the token changes and the url changes\n\n  // Returns whether or not the request token request is loading right now.\n  return useSelector<AppState, boolean>((state) => state.authReducer.loading);\n};\n","import React, { useEffect } from 'react';\nimport moment from 'moment';\nimport momentBR from 'moment/locale/pt-br';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { GlobalStyles } from './styles/globalStyles';\nimport { Theme } from './styles/theme';\nimport getStore from './redux/store';\n\nimport { Router } from './pages';\n\nimport 'antd/dist/antd.css';\n\n/**\n * Base React application component\n */\nconst App = () => {\n  useEffect(() => {\n    moment.updateLocale('pt-br', momentBR);\n  }, []);\n  const { store, persistor } = getStore();\n  return (\n    <ThemeProvider theme={Theme}>\n      <GlobalStyles />\n      <Provider store={store}>\n        <PersistGate persistor={persistor} loading={null}>\n          <Router />\n        </PersistGate>\n      </Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\n/**\n * Refister valid service worker\n * @param swUrl service worker path\n * @param config config object\n */\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\n/**\n * Check service worker function\n * @param swUrl service worker path\n * @param config config object\n */\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\n/**\n * Register function\n * @param config config object\n */\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\n/**\n * Unregister function\n */\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}