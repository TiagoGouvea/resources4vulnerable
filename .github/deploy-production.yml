name: Deploy Staging Branch > GCP
on:
  push:
    branches:
      - devops-fixes
      - devops-tests
      - devops
  pull_request:
    types: closed
    branches: master

jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.environment.outputs.branch }}
    steps:
      - uses: actions/checkout@v1
      - name: Set enviroment
        id: environment
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          branch=${GITHUB_REF#refs/heads/}

#  build_push_gcr:
#    runs-on: ubuntu-latest
#    needs: set-vars
#    steps:
#      - uses: actions/checkout@v1
#      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
#        with:
#          service_account_key: ${{ secrets.GCP_KEY_JF_EBENEFICIO }}
#          project_id: "e-beneficio-jf"
##          export_default_credentials: true
#
#      - name: Notify start deploy to Rollbar
#        uses: rollbar/github-deploy-action@1.0.2
#        with:
#          environment: ${{ needs.set-vars.outputs.branch }}
#          version: ${{ github.sha }}
#          status: 'started'
#        env:
#          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
#
#      - run: gcloud components install --quiet beta
#      - run: gcloud info
#      - run: gcloud auth configure-docker
#
#      - name: Full build and push
#        if: steps.cache-frontend.outputs.cache-hit != 'true'
#        run: |
#          cd deployment
#          ./a-build-push-gcr.sh
#
#      - name: Notify fail status to Rollbar
#        if: failure()
#        uses: rollbar/github-deploy-action@1.0.2
#        env:
#          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
#        with:
#          environment: ${{ needs.set-vars.outputs.branch }}
#          version: ${{ github.sha }}
#          status: 'failed'

#  update_e-beneficio_remote_gcp:
#    runs-on: ubuntu-latest
#    needs: [set-vars, build_push_gcr]
#    steps:
#      - uses: actions/checkout@v1
#      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
#        with:
#          service_account_key: ${{ secrets.GCP_KEY_JF_EBENEFICIO }}
#          project_id: "e-beneficio-jf"
#          export_default_credentials: true
#
#
#      - run: gcloud components install --quiet beta
#      - run: gcloud info
#
#      - name: Copy files and reload server
#        if: steps.cache-frontend.outputs.cache-hit != 'true'
#        run: |
#          cd deployment
#          ./b-copy-update-gcp.sh master
#
#      - name: Notify fail status to Rollbar
#        if: failure()
#        uses: rollbar/github-deploy-action@1.0.2
#        env:
#          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
#        with:
#          environment: ${{ needs.set-vars.outputs.branch }}
#          version: ${{ github.sha }}
#          status: 'failed'
#
#      - name: Notify success deploy to Rollbar
#        uses: rollbar/github-deploy-action@1.0.2
#        with:
#          environment: ${{ needs.set-vars.outputs.branch }}
#          version: ${{ github.sha }}
#          status: 'succeeded'
#        env:
#          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}

  update_jf-contra-fome_remote_gcp:
    runs-on: ubuntu-latest
#    needs: [set-vars, build_push_gcr]
    needs: [set-vars]
    steps:
      - uses: actions/checkout@v1
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_KEY_JF_CONTRAFOME }}
          project_id: "jf-contra-fome"
#          export_default_credentials: true

      - run: gcloud components install --quiet beta
      - run: gcloud info

      - name: Copy files and reload server
        if: steps.cache-frontend.outputs.cache-hit != 'true'
        run: |
          cd deployment
          ./b-copy-update-gcp.sh jf-contra-fome

      - name: Notify fail status to Rollbar
        if: failure()
        uses: rollbar/github-deploy-action@1.0.2
        env:
          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
        with:
          environment: ${{ needs.set-vars.outputs.branch }}
          version: ${{ github.sha }}
          status: 'failed'

      - name: Notify success deploy to Rollbar
        uses: rollbar/github-deploy-action@1.0.2
        with:
          environment: ${{ needs.set-vars.outputs.branch }}
          version: ${{ github.sha }}
          status: 'succeeded'
        env:
          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}

## Tasks
## - [ ] cache stages
## - [ ] VARIABLE relate branch and project, project_id (e-beneficio-jf)
## - [ ] Multiple destinations, multiple account
## - [x] Fix revision GITHUB_SHA
## - [x] roles/storage.admin (push images)
