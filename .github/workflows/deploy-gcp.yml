name: Deploy to GCP
on:
  push:
    branches:
      - dev
      - staging
      - master
      - devops

jobs:
  deploy_gcp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "11.x"
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.GCP_SA_EMAIL_TEST_3 }}
          service_account_key: ${{ secrets.GCP_SA_KEY_TEST_3 }}
          project_id: "covid19jf"
          export_default_credentials: true

      - name: Notify start deploy to Rollbar
        uses: rollbar/github-deploy-action@v1.0.0
        with:
          environment: 'devops'
          version:  ${{ GITHUB_SHA }}
          status: 'started'
        env:
          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}

      - run: gcloud components install --quiet beta
      - run: gcloud info
      - run: gcloud beta compute ssh "resources-dev-2" --zone "us-central1-a" --command="pwd && ls"

      - name: Configure docker credential GCR
        run: |
          VERSION=1.5.0
          OS=linux
          ARCH=amd64
          curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${VERSION}/docker-credential-gcr_${OS}_${ARCH}-${VERSION}.tar.gz" \
          | tar xz --to-stdout ./docker-credential-gcr \
          | sudo tee /usr/bin/docker-credential-gcr > /dev/null && sudo chmod +x /usr/bin/docker-credential-gcr
          docker-credential-gcr configure-docker

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Build, push and refresh
        run: |
          cd deployment
          ./deploy-gcp.sh ${{ steps.extract_branch.outputs.branch }}

      - name: Notify fail status to Rollbar
        if: failure()
        uses: rollbar/github-deploy-action@v1.0.0
        env:
          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
        with:
          environment: 'devops'
          version: ${{ GITHUB_SHA }}
          status: 'failed'

      - name: Notify sucess status to Rollbar
        uses: rollbar/github-deploy-action@v1.0.0
        env:
          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
        with:
          environment: 'devops'
          version:  ${{ GITHUB_SHA }}
          status: 'succeeded'

#        - name: Notify fail status to Rollbar
#        if: always()
#        uses: rollbar/github-deploy-action@v1.0.0
#        env:
#          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
#        with:
#          environment: 'devops'
#          version: ${{ $GITHUB_SHA=="success" ? "succeeded" : "failed" }}
#          status: 'failed'

#      - name: show job status
#        if: always()
#        run: echo $status
#        env:
#          status: ${{job.status}}
