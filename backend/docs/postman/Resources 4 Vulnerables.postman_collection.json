{
	"info": {
		"_postman_id": "40b5d2cf-41e9-4dab-a67b-7b37283b02d4",
		"name": "Resources 4 Vulnerables",
		"description": "Endpoints of the project\n\nTo be able to make the requests other than the auth, you will need to send the JWT token on the header of the request as:\n```JSON\n\"Authorization\": \"Bearer {{token}}\"\n```\n\n\nThe token can be obtained using the auth requests.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "/auth/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3789afa-0407-4a1d-a963-344cb5d238ef",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.token) {",
									"    pm.collectionVariables.set('authToken', jsonData.token);",
									"}",
									"if (jsonData && jsonData.refreshToken) {",
									"    pm.collectionVariables.set('refreshToken', jsonData.refreshToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "admin@login.com",
									"description": "Registered email",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin@login",
									"description": "Non-hashed password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Log in the user using the email and password"
					},
					"response": [
						{
							"name": "/auth/login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "admin@login.com",
											"description": "Registered email",
											"type": "text"
										},
										{
											"key": "password",
											"value": "admin@login",
											"description": "Non-hashed password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login?",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									],
									"query": [
										{
											"key": "",
											"value": null
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNTg1ODU3OTU0LCJleHAiOjE1ODU4NTgyNTR9.P8GFrNl8LpdzcnhYIlt2Yf0gqjfdsfrfZDqFaoJwZkk\",\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNTg1ODU3OTU0LCJleHAiOjE1ODYyODk5NTR9.4ei-Qph_0sBVesVXNVB9xQa2qUohMu_Sd9LQCyYNneA\",\n    \"user\": {\n        \"id\": 1,\n        \"cityId\": 1,\n        \"placeStoreId\": null,\n        \"cpf\": \"00000000000\",\n        \"name\": \"Usu√°rio admin\",\n        \"role\": \"admin\",\n        \"email\": \"admin@login.com\",\n        \"password\": \"$2a$08$criG7dYn64PoLkYHBQyFfuBQ14k/bb1QAoW1qmJYkpAZ4MxrZPtN.\",\n        \"active\": true,\n        \"createdAt\": \"2020-04-02T16:43:20.928Z\",\n        \"updatedAt\": \"2020-04-02T16:43:20.928Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "/auth/token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3789afa-0407-4a1d-a963-344cb5d238ef",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.token) {",
									"    pm.collectionVariables.set('authToken', jsonData.token);",
									"}",
									"if (jsonData && jsonData.refreshToken) {",
									"    pm.collectionVariables.set('refreshToken', jsonData.refreshToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refreshToken",
									"value": "{{refreshToken}}",
									"description": "Refresh token provided on login or other token request",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/auth/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"token"
							]
						},
						"description": "Log in the user using the email and password"
					},
					"response": []
				}
			],
			"description": "Authentication routes to allow the user to get or refresh the JWT",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cities",
			"item": [
				{
					"name": "/cities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbd3d500-1773-4ed2-848c-89f003013227",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.id) {",
									"    pm.collectionVariables.set('cityId', jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "Belo Horizonte/MG",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities"
							]
						},
						"description": "Create a new item using the defined data"
					},
					"response": []
				},
				{
					"name": "/cities/:id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "Juiz de Fora/MG",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cities/{{cityId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{cityId}}"
							]
						},
						"description": "Update item using the defined data and unique ID"
					},
					"response": []
				},
				{
					"name": "/cities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities"
							]
						},
						"description": "List of all items without any filter"
					},
					"response": []
				},
				{
					"name": "/cities/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities/{{cityId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{cityId}}"
							]
						},
						"description": "Get item detail using the unique ID"
					},
					"response": []
				},
				{
					"name": "/cities/:id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cities/{{cityId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cities",
								"{{cityId}}"
							]
						},
						"description": "Delete item using the unique ID"
					},
					"response": []
				}
			],
			"description": "Cities covered by the application",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "42aa2627-0008-48c0-ad44-4a91cfe57720",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9ac24a10-1275-4ed0-9854-34fbb33175ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Places",
			"item": [
				{
					"name": "/places",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbd3d500-1773-4ed2-848c-89f003013227",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.id) {",
									"    pm.collectionVariables.set('placeId', jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "Baraky Corporation",
									"type": "text"
								},
								{
									"key": "cityId",
									"value": "{{cityId}}",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/places",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"places"
							]
						},
						"description": "Create a new item using the defined data"
					},
					"response": []
				},
				{
					"name": "/places/:id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "Baraky Corp.",
									"type": "text"
								},
								{
									"key": "cityId",
									"value": "{{cityId}}",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/places/{{placeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"places",
								"{{placeId}}"
							]
						},
						"description": "Update item using the defined data and unique ID"
					},
					"response": []
				},
				{
					"name": "/places",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/places",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"places"
							]
						},
						"description": "List of all items without any filter"
					},
					"response": []
				},
				{
					"name": "/places/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/places/{{placeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"places",
								"{{placeId}}"
							]
						},
						"description": "Get item detail using the unique ID"
					},
					"response": []
				},
				{
					"name": "/places/:id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/places/{{placeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"places",
								"{{placeId}}"
							]
						},
						"description": "Delete item using the unique ID"
					},
					"response": []
				}
			],
			"description": "Places that the family can go to use the benefit",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "42aa2627-0008-48c0-ad44-4a91cfe57720",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9ac24a10-1275-4ed0-9854-34fbb33175ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Place Stores",
			"item": [
				{
					"name": "/place-stores",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbd3d500-1773-4ed2-848c-89f003013227",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.id) {",
									"    pm.collectionVariables.set('placeStoreId', jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "BC Centro",
									"type": "text"
								},
								{
									"key": "cityId",
									"value": "{{cityId}}",
									"type": "text",
									"disabled": true
								},
								{
									"key": "placeId",
									"value": "{{placeId}}",
									"type": "text"
								},
								{
									"key": "address",
									"value": "Rua Central, Bairro Centro",
									"description": "Just the first line of the address",
									"type": "text"
								},
								{
									"key": "cnpj",
									"value": "0000",
									"description": "Brazilian company register",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/place-stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"place-stores"
							]
						},
						"description": "Create a new item using the defined data"
					},
					"response": []
				},
				{
					"name": "/place-stores/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbd3d500-1773-4ed2-848c-89f003013227",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.id) {",
									"    pm.collectionVariables.set('placeStoreId', jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "BC Centro",
									"type": "text"
								},
								{
									"key": "cityId",
									"value": "{{cityId}}",
									"type": "text",
									"disabled": true
								},
								{
									"key": "placeId",
									"value": "{{placeId}}",
									"type": "text"
								},
								{
									"key": "address",
									"value": "Rua Central, Bairro Centro",
									"description": "Just the first line of the address",
									"type": "text"
								},
								{
									"key": "cnpj",
									"value": "0000",
									"description": "Brazilian company register",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/place-stores/{{placeStoreId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"place-stores",
								"{{placeStoreId}}"
							]
						},
						"description": "Update an item using the defined data and the unique ID"
					},
					"response": []
				},
				{
					"name": "/place-stores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/place-stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"place-stores"
							]
						},
						"description": "List of all items without any filter"
					},
					"response": []
				},
				{
					"name": "/place-stores/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/place-stores/{{placeStoreId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"place-stores",
								"{{placeStoreId}}"
							]
						},
						"description": "Get item detail using the unique ID"
					},
					"response": []
				},
				{
					"name": "/place-stores/:id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/place-stores/{{placeStoreId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"place-stores",
								"{{placeStoreId}}"
							]
						},
						"description": "Delete item using the unique ID"
					},
					"response": []
				}
			],
			"description": "Stores covered by the application, where the family can use the benefit",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "42aa2627-0008-48c0-ad44-4a91cfe57720",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9ac24a10-1275-4ed0-9854-34fbb33175ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbd3d500-1773-4ed2-848c-89f003013227",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.id) {",
									"    pm.collectionVariables.set('userId', jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Jo√£o Baraky",
									"type": "text"
								},
								{
									"key": "cityId",
									"value": "{{cityId}}",
									"type": "text",
									"disabled": true
								},
								{
									"key": "placeStoreId",
									"value": "{{placeStoreId}}",
									"type": "text"
								},
								{
									"key": "cpf",
									"value": "00000000000",
									"description": "Brazilian personal register",
									"type": "text"
								},
								{
									"key": "role",
									"value": "admin",
									"description": "Possible values: admin | manager | financial | operator",
									"type": "text"
								},
								{
									"key": "email",
									"value": "user@admin.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "1234",
									"type": "text"
								},
								{
									"key": "active",
									"value": "true",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Create a new item using the defined data"
					},
					"response": []
				},
				{
					"name": "/users/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbd3d500-1773-4ed2-848c-89f003013227",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.id) {",
									"    pm.collectionVariables.set('userId', jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Jo√£o Baraky",
									"type": "text"
								},
								{
									"key": "cityId",
									"value": "{{cityId}}",
									"type": "text",
									"disabled": true
								},
								{
									"key": "placeStoreId",
									"value": "{{placeStoreId}}",
									"type": "text"
								},
								{
									"key": "cpf",
									"value": "00000000000",
									"description": "Brazilian personal register",
									"type": "text"
								},
								{
									"key": "role",
									"value": "admin",
									"description": "Possible values: admin | manager | financial | operator",
									"type": "text"
								},
								{
									"key": "email",
									"value": "user@admin.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "1234",
									"type": "text"
								},
								{
									"key": "active",
									"value": "true",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "Update item using the defined data and unique ID"
					},
					"response": []
				},
				{
					"name": "/users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "List of all items without any filter"
					},
					"response": []
				},
				{
					"name": "/users/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "Get item detail using the unique ID"
					},
					"response": []
				},
				{
					"name": "/users/:id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete item using the unique ID"
					},
					"response": []
				}
			],
			"description": "User that will log on the system: Admin and Store users",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "42aa2627-0008-48c0-ad44-4a91cfe57720",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9ac24a10-1275-4ed0-9854-34fbb33175ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Institutions",
			"item": [
				{
					"name": "/institutions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbd3d500-1773-4ed2-848c-89f003013227",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.id) {",
									"    pm.collectionVariables.set('institutionId', jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "Government",
									"type": "text"
								},
								{
									"key": "cityId",
									"value": "{{cityId}}",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/institutions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"institutions"
							]
						},
						"description": "Create a new item using the defined data"
					},
					"response": []
				},
				{
					"name": "/institutions/:id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "Government",
									"type": "text"
								},
								{
									"key": "cityId",
									"value": "{{cityId}}",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/institutions/{{institutionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"institutions",
								"{{institutionId}}"
							]
						},
						"description": "Update item using the defined data and unique ID"
					},
					"response": []
				},
				{
					"name": "/institutions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/institutions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"institutions"
							]
						},
						"description": "List of all items without any filter"
					},
					"response": []
				},
				{
					"name": "/institutions/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/institutions/{{institutionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"institutions",
								"{{institutionId}}"
							]
						},
						"description": "Get item detail using the unique ID"
					},
					"response": []
				},
				{
					"name": "/institutions/:id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/institutions/{{institutionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"institutions",
								"{{institutionId}}"
							]
						},
						"description": "Delete item using the unique ID"
					},
					"response": []
				}
			],
			"description": "Institutions that will generate the benefits for the families",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "42aa2627-0008-48c0-ad44-4a91cfe57720",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9ac24a10-1275-4ed0-9854-34fbb33175ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Benefits",
			"item": [
				{
					"name": "/benefits",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbd3d500-1773-4ed2-848c-89f003013227",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.id) {",
									"    pm.collectionVariables.set('benefitId', jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "institutionId",
									"value": "{{institutionId}}",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Municipal Social Help",
									"type": "text"
								},
								{
									"key": "groupName",
									"value": "Extreme Poverty",
									"type": "text"
								},
								{
									"key": "month",
									"value": "3",
									"type": "text"
								},
								{
									"key": "year",
									"value": "2020",
									"type": "text"
								},
								{
									"key": "value",
									"value": "500",
									"description": "Individual money value in BRL",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/benefits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"benefits"
							]
						},
						"description": "Create a new item using the defined data"
					},
					"response": []
				},
				{
					"name": "/benefits/:id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "institutionId",
									"value": "{{institutionId}}",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Municipal Social Help",
									"type": "text"
								},
								{
									"key": "groupName",
									"value": "Extreme Poverty",
									"type": "text"
								},
								{
									"key": "month",
									"value": "3",
									"type": "text"
								},
								{
									"key": "year",
									"value": "2020",
									"type": "text"
								},
								{
									"key": "value",
									"value": "500",
									"description": "Individual money value in BRL",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/benefits/{{benefitId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"benefits",
								"{{benefitId}}"
							]
						},
						"description": "Update item using the defined data and unique ID"
					},
					"response": []
				},
				{
					"name": "/benefits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/benefits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"benefits"
							]
						},
						"description": "List of all items without any filter"
					},
					"response": []
				},
				{
					"name": "/benefits/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/benefits/{{benefitId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"benefits",
								"{{benefitId}}"
							]
						},
						"description": "Get item detail using the unique ID"
					},
					"response": []
				},
				{
					"name": "/benefits/:id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/benefits/{{benefitId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"benefits",
								"{{benefitId}}"
							]
						},
						"description": "Delete item using the unique ID"
					},
					"response": []
				}
			],
			"description": "Benefits that the families can use in the places",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "42aa2627-0008-48c0-ad44-4a91cfe57720",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9ac24a10-1275-4ed0-9854-34fbb33175ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Families",
			"item": [
				{
					"name": "/families - Search by NIS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7243e34e-59ec-4f42-8445-b3201463ec88",
								"exec": [
									"// JSON DATA",
									"const jsonData = JSON.parse(responseBody);",
									"",
									"// SET ENV VARS",
									"if (jsonData && jsonData.id) {",
									"    pm.collectionVariables.set('familyId', jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/families?nis=10000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"families"
							],
							"query": [
								{
									"key": "nis",
									"value": "10000000000"
								}
							]
						},
						"description": "Search the family by the responsible unique NIS (N√∫mero de Identifica√ß√£o Social)"
					},
					"response": []
				}
			],
			"description": "Families that will receive the benefits",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "42aa2627-0008-48c0-ad44-4a91cfe57720",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9ac24a10-1275-4ed0-9854-34fbb33175ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "/",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				},
				"description": "API base URL"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "adae17f8-0f9b-480e-9765-acfa50b4be39",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "658bd9ce-d4f4-4fff-92c6-5e5a942a57f8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "343f8f6c-1b70-402f-b1b7-fc92f07c0038",
			"key": "baseUrl",
			"value": "http://localhost:3001",
			"type": "string"
		},
		{
			"id": "53472ba0-abcc-49c3-af0e-845e1df377be",
			"key": "authToken",
			"value": "_token_",
			"type": "string"
		},
		{
			"id": "05aef429-0c26-4710-9efc-0ea8840b9d33",
			"key": "refreshToken",
			"value": "_token_",
			"type": "string"
		},
		{
			"id": "7cd17138-f104-4d3a-80ba-46c63d8f2b27",
			"key": "cityId",
			"value": "1",
			"type": "string"
		},
		{
			"id": "8c4a9d3b-7ecc-4253-b5c1-4cad68137421",
			"key": "placeId",
			"value": "1",
			"type": "string"
		},
		{
			"id": "dfc037a6-f663-40cc-9432-f3af581a605e",
			"key": "placeStoreId",
			"value": "1",
			"type": "string"
		},
		{
			"id": "6b5dec61-6733-46dd-ad58-0c4febdca2b2",
			"key": "userId",
			"value": "1",
			"type": "string"
		},
		{
			"id": "8503cc24-684a-41e2-9825-a3151f0bc37e",
			"key": "institutionId",
			"value": "1",
			"type": "string"
		},
		{
			"id": "0e06212a-f9aa-4bbb-9509-5e7107677349",
			"key": "benefitId",
			"value": "1",
			"type": "string"
		},
		{
			"id": "a7573a58-551b-4d98-8a41-ce5c82d955e7",
			"key": "familyId",
			"value": "1",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}